2018-08-09 17:11:36,435 [Thread-1:139621064693504] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:11:36,436 [Thread-1:139621064693504] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:11:36,544 [Thread-1:139621064693504] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:11:36,544 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:11:36,544 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:36,548 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:11:36,549 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:11:36,549 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:36,551 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:11:36,551 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:11:36,551 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:36,552 [Thread-1:139621064693504] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:11:36,886 [Thread-3:139621054203648] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:11:36,886 [Thread-3:139621054203648] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:11:37,018 [Thread-3:139621054203648] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:11:37,019 [Thread-3:139621054203648] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:11:37,019 [Thread-3:139621054203648] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:38,615 [Thread-4:139621043713792] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:11:38,615 [Thread-4:139621043713792] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:11:38,798 [Thread-4:139621043713792] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:11:38,820 [Thread-5:139621033223936] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:38,820 [Thread-5:139621033223936] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:11:38,823 [Thread-6:139621022734080] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:38,825 [Thread-6:139621022734080] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:11:38,825 [Thread-7:139621011982080] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:38,826 [Thread-7:139621011982080] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:11:38,968 [Thread-7:139621011982080] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:11:38,970 [Thread-7:139621011982080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:38,971 [Thread-7:139621011982080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:11:38,976 [Thread-7:139621011982080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:11:38,977 [Thread-7:139621011982080] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:11:38,978 [Thread-7:139621011982080] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:39,001 [Thread-6:139621022734080] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:11:39,002 [Thread-5:139621033223936] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:11:39,003 [Thread-6:139621022734080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:39,004 [Thread-6:139621022734080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:11:39,006 [Thread-5:139621033223936] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:11:39,007 [Thread-5:139621033223936] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:11:39,010 [Thread-6:139621022734080] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:11:39,011 [Thread-6:139621022734080] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:11:39,016 [Thread-6:139621022734080] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:11:39,016 [Thread-5:139621033223936] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:11:39,019 [Thread-5:139621033223936] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:11:39,019 [Thread-5:139621033223936] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:11:39,020 [Thread-5:139621033223936] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:11:39,023 [Thread-5:139621033223936] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:11:39,023 [Thread-5:139621033223936] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7efc0c170348>
2018-08-09 17:12:14,402 [Thread-1:140559001409280] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:12:14,404 [Thread-1:140559001409280] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:12:14,516 [Thread-1:140559001409280] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:14,552 [Thread-3:140558990919424] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,559 [Thread-3:140558990919424] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:12:14,565 [Thread-4:140558911665920] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,565 [Thread-4:140558911665920] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:12:14,570 [Thread-5:140558901176064] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,570 [Thread-5:140558901176064] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:12:14,654 [Thread-3:140558990919424] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:12:14,655 [Thread-3:140558990919424] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,656 [Thread-3:140558990919424] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:12:14,657 [Thread-3:140558990919424] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:12:14,658 [Thread-3:140558990919424] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:12:14,658 [Thread-3:140558990919424] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:12:14,659 [Thread-3:140558990919424] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:12:14,660 [Thread-3:140558990919424] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:12:14,660 [Thread-3:140558990919424] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fd6785e5f08>
2018-08-09 17:12:14,704 [Thread-5:140558901176064] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:14,705 [Thread-5:140558901176064] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,706 [Thread-5:140558901176064] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:12:14,708 [Thread-4:140558911665920] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:14,710 [Thread-5:140558901176064] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:12:14,711 [Thread-5:140558901176064] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:12:14,712 [Thread-4:140558911665920] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:14,712 [Thread-4:140558911665920] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:12:14,714 [Thread-4:140558911665920] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:12:14,712 [Thread-5:140558901176064] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:12:14,715 [Thread-4:140558911665920] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:12:14,720 [Thread-4:140558911665920] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:12:26,335 [Thread-1:140403506685696] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:12:26,335 [Thread-1:140403506685696] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:12:26,405 [Thread-1:140403506685696] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:26,423 [Thread-3:140403375953664] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,424 [Thread-3:140403375953664] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:12:26,430 [Thread-4:140403365463808] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,430 [Thread-4:140403365463808] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:12:26,432 [Thread-5:140403151992576] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,432 [Thread-5:140403151992576] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:12:26,532 [Thread-4:140403365463808] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:26,533 [Thread-3:140403375953664] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:12:26,534 [Thread-4:140403365463808] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,534 [Thread-4:140403365463808] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:12:26,535 [Thread-3:140403375953664] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,536 [Thread-3:140403375953664] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:12:26,538 [Thread-3:140403375953664] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:12:26,539 [Thread-3:140403375953664] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:12:26,539 [Thread-3:140403375953664] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:12:26,537 [Thread-4:140403365463808] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:12:26,540 [Thread-4:140403365463808] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:12:26,540 [Thread-4:140403365463808] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:12:26,544 [Thread-3:140403375953664] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:12:26,545 [Thread-3:140403375953664] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:12:26,545 [Thread-3:140403375953664] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb23c840fc8>
2018-08-09 17:12:26,573 [Thread-5:140403151992576] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:12:26,574 [Thread-5:140403151992576] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:12:26,574 [Thread-5:140403151992576] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:12:26,577 [Thread-5:140403151992576] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:12:26,577 [Thread-5:140403151992576] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:12:26,577 [Thread-5:140403151992576] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:48,686 [Thread-1:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:20:48,686 [Thread-1:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:20:48,757 [Thread-1:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:20:48,758 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:20:48,758 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:48,761 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:20:48,762 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:20:48,762 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:48,765 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:20:48,765 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:20:48,765 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:48,767 [Thread-1:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:20:49,137 [Thread-3:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:20:49,138 [Thread-3:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:20:49,221 [Thread-3:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:20:49,221 [Thread-3:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:20:49,222 [Thread-3:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:51,278 [Thread-4:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:20:51,278 [Thread-4:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:20:51,358 [Thread-4:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:20:51,372 [Thread-5:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,372 [Thread-5:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:20:51,374 [Thread-6:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,376 [Thread-6:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:20:51,376 [Thread-7:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,377 [Thread-7:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:20:51,491 [Thread-5:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:20:51,491 [Thread-5:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,491 [Thread-5:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:20:51,492 [Thread-5:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:20:51,492 [Thread-5:140511158253312] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:20:51,492 [Thread-5:140511158253312] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:51,495 [Thread-5:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:20:51,497 [Thread-5:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:20:51,497 [Thread-5:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4c8e48>
2018-08-09 17:20:51,498 [Thread-7:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:20:51,498 [Thread-7:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,499 [Thread-7:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:20:51,500 [Thread-7:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:20:51,500 [Thread-7:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:20:51,500 [Thread-7:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:20:51,534 [Thread-6:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:20:51,535 [Thread-6:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:20:51,535 [Thread-6:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:20:51,537 [Thread-6:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:20:51,538 [Thread-6:140511147763456] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:20:51,538 [Thread-6:140511147763456] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:22:37,697 [Thread-8:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:22:37,698 [Thread-8:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:22:37,791 [Thread-8:140511147763456] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:22:37,792 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:22:37,792 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:22:37,795 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:22:37,796 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:22:37,796 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:22:37,797 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:22:37,798 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:22:37,798 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:22:37,799 [Thread-8:140511147763456] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:22:38,166 [Thread-9:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:22:38,167 [Thread-9:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:22:38,296 [Thread-9:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:22:38,297 [Thread-9:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:22:38,298 [Thread-9:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:22:40,277 [Thread-11:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:22:40,277 [Thread-11:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:22:40,383 [Thread-11:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:22:40,397 [Thread-10:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,400 [Thread-12:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,401 [Thread-12:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:22:40,400 [Thread-10:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:22:40,406 [Thread-13:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,407 [Thread-13:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:22:40,561 [Thread-12:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:22:40,562 [Thread-12:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,562 [Thread-12:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:22:40,566 [Thread-10:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:22:40,567 [Thread-10:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,567 [Thread-10:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:22:40,569 [Thread-10:140511158253312] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:22:40,569 [Thread-10:140511158253312] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:22:40,569 [Thread-10:140511158253312] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:22:40,571 [Thread-12:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:22:40,572 [Thread-12:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:22:40,572 [Thread-12:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:22:40,573 [Thread-10:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:22:40,573 [Thread-10:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:22:40,573 [Thread-10:140511158253312] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb56dbec88>
2018-08-09 17:22:40,594 [Thread-13:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:22:40,597 [Thread-13:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:22:40,597 [Thread-13:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:22:40,601 [Thread-13:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:22:40,601 [Thread-13:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:22:40,601 [Thread-13:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:02,342 [Thread-14:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:23:02,343 [Thread-14:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:23:02,408 [Thread-14:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:23:02,408 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:23:02,409 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:02,411 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:23:02,413 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:23:02,413 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:02,414 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:23:02,414 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:23:02,414 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:02,415 [Thread-14:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:23:02,840 [Thread-15:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:23:02,841 [Thread-15:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:23:02,976 [Thread-15:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:23:02,976 [Thread-15:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:23:02,976 [Thread-15:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:04,581 [Thread-16:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:23:04,581 [Thread-16:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:23:04,676 [Thread-16:140511158253312] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:23:04,693 [Thread-17:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,697 [Thread-17:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:23:04,706 [Thread-18:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,706 [Thread-18:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:23:04,720 [Thread-19:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,727 [Thread-19:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:23:04,810 [Thread-17:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:23:04,810 [Thread-17:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,810 [Thread-17:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:23:04,812 [Thread-17:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:23:04,812 [Thread-17:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:23:04,812 [Thread-17:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:23:04,813 [Thread-17:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:23:04,813 [Thread-17:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:23:04,813 [Thread-17:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c696a48>
2018-08-09 17:23:04,855 [Thread-19:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:23:04,856 [Thread-19:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,856 [Thread-19:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:23:04,857 [Thread-18:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:23:04,858 [Thread-18:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:23:04,858 [Thread-18:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:23:04,859 [Thread-18:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:23:04,859 [Thread-18:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:23:04,859 [Thread-18:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:23:04,864 [Thread-19:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:23:04,864 [Thread-19:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:23:04,864 [Thread-19:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:13,961 [Thread-20:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:28:13,962 [Thread-20:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:28:14,047 [Thread-20:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:28:14,047 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:28:14,047 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:14,050 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:28:14,050 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:28:14,050 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:14,051 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:28:14,051 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:28:14,051 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:14,052 [Thread-20:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:28:14,414 [Thread-22:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:28:14,415 [Thread-22:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:28:14,473 [Thread-22:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:28:14,474 [Thread-22:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:28:14,474 [Thread-22:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:16,158 [Thread-23:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:28:16,158 [Thread-23:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:28:16,231 [Thread-23:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:28:16,251 [Thread-24:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,252 [Thread-24:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:28:16,258 [Thread-25:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,258 [Thread-25:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:28:16,261 [Thread-26:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,262 [Thread-26:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:28:16,372 [Thread-24:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:28:16,373 [Thread-24:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,373 [Thread-24:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:28:16,374 [Thread-24:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:28:16,374 [Thread-24:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:28:16,374 [Thread-24:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:16,375 [Thread-24:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:28:16,376 [Thread-24:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:28:16,376 [Thread-24:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c48e488>
2018-08-09 17:28:16,410 [Thread-25:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:28:16,411 [Thread-25:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,411 [Thread-25:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:28:16,412 [Thread-26:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:28:16,413 [Thread-26:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:28:16,413 [Thread-26:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:28:16,414 [Thread-26:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:28:16,414 [Thread-26:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:28:16,414 [Thread-26:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:28:16,417 [Thread-25:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:28:16,417 [Thread-25:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:28:16,417 [Thread-25:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:35:48,098 [Thread-27:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:35:48,098 [Thread-27:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:35:48,172 [Thread-27:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:35:48,172 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:35:48,172 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:48,175 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:35:48,176 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:35:48,176 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:48,177 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:35:48,178 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:35:48,178 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:48,179 [Thread-27:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:35:48,564 [Thread-28:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:35:48,565 [Thread-28:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:35:48,630 [Thread-28:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:35:48,630 [Thread-28:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:35:48,630 [Thread-28:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:50,443 [Thread-29:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:35:50,444 [Thread-29:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:35:50,540 [Thread-29:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:35:50,584 [Thread-30:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,586 [Thread-30:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:35:50,596 [Thread-31:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,598 [Thread-32:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,599 [Thread-32:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:35:50,598 [Thread-31:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:35:50,741 [Thread-30:140511168743168] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:35:50,742 [Thread-30:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,742 [Thread-30:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:35:50,745 [Thread-30:140511168743168] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:35:50,745 [Thread-30:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:35:50,745 [Thread-30:140511168743168] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:50,747 [Thread-30:140511168743168] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:35:50,748 [Thread-30:140511168743168] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:35:50,748 [Thread-30:140511168743168] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c6c62c8>
2018-08-09 17:35:50,819 [Thread-32:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:35:50,820 [Thread-32:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,820 [Thread-32:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:35:50,822 [Thread-31:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:35:50,823 [Thread-31:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:35:50,823 [Thread-31:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:35:50,825 [Thread-32:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:35:50,825 [Thread-32:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:35:50,826 [Thread-32:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:35:50,828 [Thread-31:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:35:50,829 [Thread-31:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:35:50,829 [Thread-31:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:37:43,723 [Thread-40:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:37:43,723 [Thread-40:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:37:43,796 [Thread-40:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:37:43,796 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:37:43,796 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:37:43,799 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:37:43,800 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:37:43,801 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:37:43,802 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:37:43,803 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:37:43,803 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:37:43,805 [Thread-40:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:37:44,131 [Thread-41:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:37:44,132 [Thread-41:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:37:44,208 [Thread-41:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:37:44,209 [Thread-41:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:37:44,209 [Thread-41:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:37:49,180 [Thread-42:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:37:49,180 [Thread-42:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:37:49,278 [Thread-42:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:37:49,313 [Thread-43:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,319 [Thread-43:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:37:49,318 [Thread-44:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,319 [Thread-44:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:37:49,327 [Thread-45:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,340 [Thread-45:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:37:49,489 [Thread-43:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:37:49,490 [Thread-43:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,490 [Thread-43:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:37:49,491 [Thread-43:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:37:49,491 [Thread-43:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:37:49,491 [Thread-43:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:37:49,492 [Thread-43:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:37:49,492 [Thread-43:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:37:49,492 [Thread-43:140510794610432] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4a4e08>
2018-08-09 17:37:49,542 [Thread-45:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:37:49,543 [Thread-45:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,543 [Thread-45:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:37:49,543 [Thread-44:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:37:49,546 [Thread-44:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:37:49,546 [Thread-44:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:37:49,549 [Thread-44:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:37:49,550 [Thread-44:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:37:49,550 [Thread-44:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:37:49,551 [Thread-45:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:37:49,551 [Thread-45:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:37:49,551 [Thread-45:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:38:42,363 [Thread-46:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:38:42,363 [Thread-46:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:38:42,452 [Thread-46:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:38:42,471 [Thread-47:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,474 [Thread-47:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:38:42,474 [Thread-48:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,477 [Thread-48:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:38:42,484 [Thread-49:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,484 [Thread-49:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:38:42,584 [Thread-48:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:38:42,584 [Thread-48:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,584 [Thread-48:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:38:42,585 [Thread-48:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:38:42,585 [Thread-48:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:38:42,585 [Thread-48:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:38:42,686 [Thread-49:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:38:42,686 [Thread-49:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,686 [Thread-49:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:38:42,688 [Thread-47:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:38:42,688 [Thread-47:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:42,688 [Thread-47:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:38:42,690 [Thread-49:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:38:42,690 [Thread-49:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:38:42,690 [Thread-49:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:38:42,694 [Thread-47:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:38:42,694 [Thread-47:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:38:42,695 [Thread-47:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:38:42,701 [Thread-47:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:38:42,701 [Thread-47:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:38:42,702 [Thread-47:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4e4c9e88>
2018-08-09 17:38:58,597 [Thread-58:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:38:58,597 [Thread-58:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:38:58,685 [Thread-58:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:38:58,705 [Thread-59:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,706 [Thread-59:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:38:58,711 [Thread-60:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,712 [Thread-60:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:38:58,716 [Thread-61:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,716 [Thread-61:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:38:58,819 [Thread-59:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:38:58,819 [Thread-59:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,819 [Thread-59:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:38:58,820 [Thread-59:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:38:58,821 [Thread-59:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:38:58,821 [Thread-59:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:38:58,822 [Thread-59:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:38:58,822 [Thread-59:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:38:58,822 [Thread-59:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4e4b6a08>
2018-08-09 17:38:58,865 [Thread-60:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:38:58,865 [Thread-60:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,866 [Thread-60:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:38:58,867 [Thread-61:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:38:58,867 [Thread-61:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:38:58,867 [Thread-61:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:38:58,869 [Thread-60:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:38:58,870 [Thread-60:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:38:58,870 [Thread-60:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:38:58,871 [Thread-61:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:38:58,871 [Thread-61:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:38:58,871 [Thread-61:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:47,006 [Thread-70:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:39:47,006 [Thread-70:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:39:47,073 [Thread-70:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:39:47,074 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:39:47,074 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:47,076 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:39:47,077 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:39:47,077 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:47,078 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:39:47,078 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:39:47,079 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:47,080 [Thread-70:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:39:47,423 [Thread-71:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:39:47,423 [Thread-71:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:39:47,489 [Thread-71:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:39:47,489 [Thread-71:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:39:47,489 [Thread-71:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:49,516 [Thread-72:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:39:49,517 [Thread-72:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:39:49,710 [Thread-72:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:39:49,734 [Thread-73:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,736 [Thread-73:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:39:49,736 [Thread-74:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,738 [Thread-74:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:39:49,743 [Thread-75:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,744 [Thread-75:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:39:49,910 [Thread-73:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:39:49,910 [Thread-73:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,914 [Thread-73:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:39:49,922 [Thread-73:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:39:49,922 [Thread-73:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:39:49,923 [Thread-73:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:39:49,924 [Thread-74:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:39:49,925 [Thread-74:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,925 [Thread-74:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:39:49,927 [Thread-73:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:39:49,930 [Thread-73:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:39:49,930 [Thread-73:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c491448>
2018-08-09 17:39:49,929 [Thread-74:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:39:49,933 [Thread-74:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:39:49,933 [Thread-74:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:39:49,940 [Thread-75:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:39:49,940 [Thread-75:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:39:49,940 [Thread-75:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:39:49,946 [Thread-75:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:39:49,946 [Thread-75:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:39:49,947 [Thread-75:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:24,529 [Thread-84:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:40:24,529 [Thread-84:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:40:24,608 [Thread-84:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:40:24,608 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:40:24,608 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:24,611 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:40:24,611 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:40:24,611 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:24,612 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:40:24,613 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:40:24,613 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:24,613 [Thread-84:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:40:24,961 [Thread-85:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:40:24,961 [Thread-85:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:40:25,032 [Thread-85:140510794610432] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:40:25,033 [Thread-85:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:40:25,033 [Thread-85:140510794610432] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:26,929 [Thread-86:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:40:26,942 [Thread-86:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:40:27,017 [Thread-86:140510794610432] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:40:27,040 [Thread-87:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,041 [Thread-87:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:40:27,047 [Thread-88:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,048 [Thread-88:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:40:27,052 [Thread-89:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,052 [Thread-89:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:40:27,168 [Thread-88:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:40:27,169 [Thread-88:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,169 [Thread-88:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:40:27,170 [Thread-88:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:40:27,170 [Thread-88:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:40:27,171 [Thread-88:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:40:27,211 [Thread-89:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:40:27,211 [Thread-89:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,212 [Thread-89:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:40:27,212 [Thread-87:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:40:27,213 [Thread-87:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:27,213 [Thread-87:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:40:27,214 [Thread-89:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:40:27,214 [Thread-89:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:40:27,215 [Thread-89:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:27,216 [Thread-87:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:40:27,216 [Thread-87:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:40:27,217 [Thread-87:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:27,221 [Thread-87:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:40:27,222 [Thread-87:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:40:27,224 [Thread-87:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4fe988>
2018-08-09 17:40:42,343 [Thread-90:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:40:42,344 [Thread-90:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:40:42,401 [Thread-90:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:40:42,401 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:40:42,401 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:42,404 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:40:42,404 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:40:42,405 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:42,406 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:40:42,407 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:40:42,407 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:42,408 [Thread-90:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:40:42,727 [Thread-91:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:40:42,727 [Thread-91:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:40:42,792 [Thread-91:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:40:42,792 [Thread-91:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:40:42,793 [Thread-91:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:44,579 [Thread-92:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:40:44,580 [Thread-92:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:40:44,734 [Thread-92:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:40:44,753 [Thread-93:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,753 [Thread-93:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:40:44,760 [Thread-94:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,760 [Thread-94:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:40:44,763 [Thread-95:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,763 [Thread-95:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:40:44,868 [Thread-93:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:40:44,868 [Thread-93:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,868 [Thread-93:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:40:44,869 [Thread-93:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:40:44,869 [Thread-93:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:40:44,869 [Thread-93:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:40:44,873 [Thread-93:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:40:44,873 [Thread-93:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:40:44,873 [Thread-93:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c6ac3c8>
2018-08-09 17:40:44,875 [Thread-94:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:40:44,875 [Thread-94:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,875 [Thread-94:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:40:44,876 [Thread-95:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:40:44,876 [Thread-95:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:40:44,877 [Thread-95:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:40:44,879 [Thread-94:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:40:44,879 [Thread-94:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:40:44,879 [Thread-94:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:40:44,880 [Thread-95:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:40:44,880 [Thread-95:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:40:44,880 [Thread-95:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:14,543 [Thread-96:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:42:14,543 [Thread-96:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:42:14,634 [Thread-96:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:42:14,650 [Thread-97:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,651 [Thread-97:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:42:14,654 [Thread-98:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,655 [Thread-98:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:42:14,661 [Thread-99:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,662 [Thread-99:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:42:14,777 [Thread-99:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:42:14,778 [Thread-99:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,778 [Thread-99:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:42:14,779 [Thread-98:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:42:14,779 [Thread-98:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,780 [Thread-98:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:42:14,781 [Thread-99:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:42:14,781 [Thread-99:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:42:14,781 [Thread-99:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:14,783 [Thread-98:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:42:14,783 [Thread-98:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:42:14,783 [Thread-98:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:42:14,787 [Thread-97:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:42:14,788 [Thread-97:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:14,788 [Thread-97:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:42:14,791 [Thread-97:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:42:14,791 [Thread-97:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:42:14,791 [Thread-97:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:14,795 [Thread-97:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:42:14,795 [Thread-97:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:42:14,795 [Thread-97:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4897c8>
2018-08-09 17:42:33,462 [Thread-100:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:42:33,463 [Thread-100:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:42:33,527 [Thread-100:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:42:33,527 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:42:33,527 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:33,529 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:42:33,530 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:42:33,530 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:33,532 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:42:33,532 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:42:33,532 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:33,533 [Thread-100:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:42:33,868 [Thread-101:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:42:33,868 [Thread-101:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:42:33,926 [Thread-101:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:42:33,927 [Thread-101:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:42:33,927 [Thread-101:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:36,405 [Thread-102:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:42:36,405 [Thread-102:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:42:36,501 [Thread-102:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:42:36,518 [Thread-103:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,519 [Thread-103:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:42:36,524 [Thread-104:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,524 [Thread-104:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:42:36,527 [Thread-105:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,528 [Thread-105:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:42:36,618 [Thread-103:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:42:36,618 [Thread-103:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,618 [Thread-103:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:42:36,619 [Thread-103:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:42:36,619 [Thread-103:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:42:36,619 [Thread-103:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:42:36,620 [Thread-103:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:42:36,621 [Thread-103:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:42:36,621 [Thread-103:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4a40c8>
2018-08-09 17:42:36,654 [Thread-104:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:42:36,654 [Thread-104:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,654 [Thread-104:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:42:36,656 [Thread-105:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:42:36,656 [Thread-105:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:42:36,657 [Thread-105:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:42:36,658 [Thread-104:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:42:36,659 [Thread-104:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:42:36,659 [Thread-104:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:42:36,662 [Thread-105:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:42:36,663 [Thread-105:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:42:36,663 [Thread-105:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:43:13,576 [Thread-106:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:43:13,576 [Thread-106:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:43:13,680 [Thread-106:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:43:13,698 [Thread-107:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,699 [Thread-107:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:43:13,705 [Thread-108:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,709 [Thread-108:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:43:13,709 [Thread-109:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,711 [Thread-109:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:43:13,845 [Thread-107:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:43:13,845 [Thread-107:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,845 [Thread-107:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:43:13,846 [Thread-107:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:43:13,847 [Thread-107:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:43:13,847 [Thread-107:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:43:13,848 [Thread-107:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:43:13,848 [Thread-107:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:43:13,848 [Thread-107:140511189722880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4da58188>
2018-08-09 17:43:13,916 [Thread-109:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:43:13,916 [Thread-109:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,916 [Thread-109:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:43:13,918 [Thread-108:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:43:13,918 [Thread-108:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:43:13,918 [Thread-108:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:43:13,920 [Thread-109:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:43:13,921 [Thread-109:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:43:13,921 [Thread-109:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:43:13,923 [Thread-108:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:43:13,923 [Thread-108:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:43:13,923 [Thread-108:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:44:25,528 [Thread-110:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:44:25,529 [Thread-110:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:44:25,617 [Thread-110:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:44:25,617 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:44:25,617 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:25,621 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:44:25,622 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:44:25,622 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:25,624 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:44:25,624 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:44:25,625 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:25,626 [Thread-110:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:44:25,959 [Thread-111:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:44:25,960 [Thread-111:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:44:26,017 [Thread-111:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:44:26,017 [Thread-111:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:44:26,018 [Thread-111:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:27,635 [Thread-112:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:44:27,636 [Thread-112:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:44:27,726 [Thread-112:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:44:27,743 [Thread-113:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,743 [Thread-113:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:44:27,749 [Thread-114:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,751 [Thread-114:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:44:27,755 [Thread-115:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,757 [Thread-115:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:44:27,867 [Thread-113:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:44:27,867 [Thread-113:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,868 [Thread-113:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:44:27,869 [Thread-113:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:44:27,869 [Thread-113:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:44:27,869 [Thread-113:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:27,870 [Thread-113:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:44:27,871 [Thread-113:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:44:27,871 [Thread-113:140511179233024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c491748>
2018-08-09 17:44:27,905 [Thread-114:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:44:27,905 [Thread-114:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,905 [Thread-114:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:44:27,907 [Thread-115:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:44:27,907 [Thread-115:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:27,908 [Thread-115:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:44:27,909 [Thread-115:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:44:27,910 [Thread-115:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:44:27,910 [Thread-115:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:27,911 [Thread-114:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:44:27,913 [Thread-114:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:44:27,913 [Thread-114:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:44:59,173 [Thread-116:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:44:59,174 [Thread-116:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:44:59,293 [Thread-116:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:44:59,334 [Thread-117:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,334 [Thread-117:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:44:59,343 [Thread-118:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,344 [Thread-118:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:44:59,363 [Thread-119:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,365 [Thread-119:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:44:59,445 [Thread-117:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:44:59,445 [Thread-117:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,446 [Thread-117:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:44:59,446 [Thread-117:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:44:59,447 [Thread-117:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:44:59,447 [Thread-117:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:44:59,448 [Thread-117:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:44:59,448 [Thread-117:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:44:59,448 [Thread-117:140511157729024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4c4ad188>
2018-08-09 17:44:59,480 [Thread-119:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:44:59,480 [Thread-119:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,480 [Thread-119:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:44:59,481 [Thread-118:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:44:59,481 [Thread-118:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:44:59,481 [Thread-118:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:44:59,483 [Thread-118:140511179233024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:44:59,483 [Thread-118:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:44:59,483 [Thread-118:140511179233024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:44:59,484 [Thread-119:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:44:59,485 [Thread-119:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:44:59,485 [Thread-119:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:45:33,869 [Thread-120:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:45:33,870 [Thread-120:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:45:33,949 [Thread-120:140511179233024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:45:33,971 [Thread-121:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:33,973 [Thread-121:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:45:33,982 [Thread-122:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:33,982 [Thread-122:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:45:33,984 [Thread-123:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:33,985 [Thread-123:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:45:34,072 [Thread-121:140511168481024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:45:34,072 [Thread-121:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:34,072 [Thread-121:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:45:34,073 [Thread-121:140511168481024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:45:34,073 [Thread-121:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:45:34,074 [Thread-121:140511168481024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:45:34,075 [Thread-121:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:45:34,075 [Thread-121:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:45:34,075 [Thread-121:140511168481024] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fcb4da4d388>
2018-08-09 17:45:34,119 [Thread-122:140511157729024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:45:34,119 [Thread-122:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:34,119 [Thread-122:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:45:34,121 [Thread-123:140511189722880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:45:34,121 [Thread-123:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:45:34,121 [Thread-123:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:45:34,123 [Thread-123:140511189722880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:45:34,123 [Thread-123:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:45:34,123 [Thread-123:140511189722880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:45:34,124 [Thread-122:140511157729024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:45:34,125 [Thread-122:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:45:34,125 [Thread-122:140511157729024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:46:41,030 [Thread-1:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:46:41,031 [Thread-1:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:46:41,128 [Thread-1:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:46:41,128 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:46:41,128 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:46:41,131 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:46:41,132 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:46:41,132 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:46:41,133 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:46:41,133 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:46:41,133 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:46:41,134 [Thread-1:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:46:41,480 [Thread-3:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:46:41,480 [Thread-3:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:46:41,552 [Thread-3:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:46:41,552 [Thread-3:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:46:41,552 [Thread-3:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:46:44,013 [Thread-4:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:46:44,013 [Thread-4:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:46:44,093 [Thread-4:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:46:44,114 [Thread-5:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,118 [Thread-5:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:46:44,117 [Thread-6:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,144 [Thread-6:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:46:44,149 [Thread-7:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,149 [Thread-7:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:46:44,236 [Thread-5:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:46:44,236 [Thread-5:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,236 [Thread-5:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:46:44,237 [Thread-5:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:46:44,237 [Thread-5:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:46:44,238 [Thread-5:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:46:44,239 [Thread-5:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:46:44,241 [Thread-5:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:46:44,241 [Thread-5:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff590499648>
2018-08-09 17:46:44,281 [Thread-6:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:46:44,281 [Thread-6:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,281 [Thread-6:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:46:44,283 [Thread-7:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:46:44,283 [Thread-7:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:46:44,283 [Thread-7:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:46:44,285 [Thread-6:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:46:44,286 [Thread-6:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:46:44,286 [Thread-6:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:46:44,287 [Thread-7:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:46:44,287 [Thread-7:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:46:44,288 [Thread-7:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:48:08,005 [Thread-8:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:48:08,006 [Thread-8:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:48:08,089 [Thread-8:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:48:08,122 [Thread-9:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,129 [Thread-9:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:48:08,136 [Thread-11:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,140 [Thread-11:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:48:08,129 [Thread-10:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,141 [Thread-10:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:48:08,249 [Thread-9:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:48:08,249 [Thread-9:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,249 [Thread-9:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:48:08,250 [Thread-9:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:48:08,250 [Thread-9:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:48:08,250 [Thread-9:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:48:08,252 [Thread-9:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:48:08,252 [Thread-9:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:48:08,252 [Thread-9:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff590313c08>
2018-08-09 17:48:08,298 [Thread-10:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:48:08,301 [Thread-10:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,301 [Thread-10:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:48:08,301 [Thread-11:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:48:08,303 [Thread-11:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:48:08,303 [Thread-11:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:48:08,304 [Thread-10:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:48:08,305 [Thread-10:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:48:08,307 [Thread-10:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:48:08,307 [Thread-11:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:48:08,307 [Thread-11:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:48:08,308 [Thread-11:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:04,819 [Thread-12:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:50:04,820 [Thread-12:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:50:04,909 [Thread-12:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:50:04,910 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:50:04,910 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:04,914 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:50:04,915 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:50:04,915 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:04,917 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:50:04,917 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:50:04,918 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:04,919 [Thread-12:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:50:05,326 [Thread-13:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:50:05,326 [Thread-13:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:50:05,407 [Thread-13:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:50:05,408 [Thread-13:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:50:05,408 [Thread-13:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:07,218 [Thread-14:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:50:07,218 [Thread-14:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:50:07,410 [Thread-14:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:50:07,427 [Thread-15:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,428 [Thread-15:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:50:07,434 [Thread-16:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,434 [Thread-16:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:50:07,436 [Thread-17:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,439 [Thread-17:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:50:07,628 [Thread-15:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:50:07,628 [Thread-15:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,628 [Thread-15:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:50:07,631 [Thread-16:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:50:07,631 [Thread-16:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,631 [Thread-16:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:50:07,633 [Thread-15:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:50:07,636 [Thread-15:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:50:07,636 [Thread-15:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:50:07,637 [Thread-16:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:50:07,641 [Thread-16:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:50:07,641 [Thread-16:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:50:07,643 [Thread-17:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:50:07,644 [Thread-17:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:50:07,644 [Thread-17:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:50:07,643 [Thread-15:140692592523008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:50:07,645 [Thread-15:140692592523008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:50:07,646 [Thread-15:140692592523008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff59050ea08>
2018-08-09 17:50:07,648 [Thread-17:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:50:07,648 [Thread-17:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:50:07,649 [Thread-17:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:34,453 [Thread-18:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:51:34,454 [Thread-18:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:51:34,564 [Thread-18:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:51:34,565 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:51:34,565 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:34,567 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:51:34,568 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:51:34,568 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:34,569 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:51:34,570 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:51:34,570 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:34,571 [Thread-18:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:51:35,000 [Thread-19:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:51:35,001 [Thread-19:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:51:35,098 [Thread-19:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:51:35,098 [Thread-19:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:51:35,098 [Thread-19:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:36,899 [Thread-20:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:51:36,899 [Thread-20:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:51:37,081 [Thread-20:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:51:37,124 [Thread-21:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,126 [Thread-22:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,127 [Thread-22:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:51:37,127 [Thread-21:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:51:37,137 [Thread-23:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,138 [Thread-23:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:51:37,345 [Thread-21:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:51:37,345 [Thread-21:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,346 [Thread-21:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:51:37,349 [Thread-22:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:51:37,350 [Thread-22:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,350 [Thread-22:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:51:37,354 [Thread-22:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:51:37,359 [Thread-22:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:51:37,358 [Thread-23:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:51:37,359 [Thread-23:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:51:37,359 [Thread-23:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:51:37,361 [Thread-23:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:51:37,357 [Thread-21:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:51:37,362 [Thread-21:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:51:37,362 [Thread-21:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:37,359 [Thread-22:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:51:37,362 [Thread-23:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:51:37,365 [Thread-23:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:51:37,367 [Thread-21:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:51:37,367 [Thread-21:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:51:37,367 [Thread-21:140692561053440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff5904b7588>
2018-08-09 17:52:02,090 [Thread-24:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:52:02,091 [Thread-24:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:52:02,200 [Thread-24:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:02,220 [Thread-25:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,221 [Thread-25:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:02,227 [Thread-26:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,229 [Thread-26:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:02,229 [Thread-27:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,236 [Thread-27:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:02,333 [Thread-25:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:52:02,333 [Thread-25:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,333 [Thread-25:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:02,334 [Thread-25:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:52:02,335 [Thread-25:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:52:02,335 [Thread-25:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:02,336 [Thread-25:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:52:02,336 [Thread-25:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:52:02,336 [Thread-25:140692582033152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff5904b78c8>
2018-08-09 17:52:02,379 [Thread-26:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:52:02,379 [Thread-26:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,380 [Thread-26:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:02,381 [Thread-27:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:02,381 [Thread-27:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:02,381 [Thread-27:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:02,383 [Thread-26:140692561053440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:52:02,384 [Thread-26:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:52:02,384 [Thread-26:140692561053440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:52:02,387 [Thread-27:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:52:02,388 [Thread-27:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:52:02,388 [Thread-27:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:04,517 [Thread-28:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:52:04,517 [Thread-28:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:52:04,611 [Thread-28:140692561053440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:04,635 [Thread-29:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,636 [Thread-29:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:04,645 [Thread-30:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,645 [Thread-30:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:04,648 [Thread-31:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,651 [Thread-31:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:04,792 [Thread-30:140692582033152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:52:04,792 [Thread-30:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,792 [Thread-30:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:04,794 [Thread-30:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:52:04,794 [Thread-30:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:52:04,794 [Thread-30:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:52:04,900 [Thread-31:140692592523008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:04,901 [Thread-31:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,901 [Thread-31:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:04,902 [Thread-29:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:52:04,902 [Thread-29:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:04,903 [Thread-29:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:04,914 [Thread-31:140692592523008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:52:04,915 [Thread-31:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:52:04,915 [Thread-31:140692592523008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:04,920 [Thread-29:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:52:04,921 [Thread-29:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:52:04,921 [Thread-29:140692571543296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:04,933 [Thread-29:140692571543296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:52:04,933 [Thread-29:140692571543296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:52:04,934 [Thread-29:140692571543296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7ff5904b7488>
2018-08-09 17:52:05,940 [Thread-32:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:52:05,942 [Thread-32:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:52:06,060 [Thread-32:140692571543296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:52:06,060 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:52:06,060 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:06,066 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:52:06,068 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:52:06,069 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:06,070 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:52:06,071 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:52:06,072 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:06,074 [Thread-32:140692571543296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:52:06,445 [Thread-33:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:52:06,445 [Thread-33:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:52:06,507 [Thread-33:140692582033152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:52:06,508 [Thread-33:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:52:06,508 [Thread-33:140692582033152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:28,117 [Thread-1:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:52:28,118 [Thread-1:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:52:28,193 [Thread-1:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:28,215 [Thread-3:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,215 [Thread-3:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:28,254 [Thread-5:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,258 [Thread-5:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:28,266 [Thread-4:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,266 [Thread-4:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:28,361 [Thread-3:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:52:28,362 [Thread-3:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,362 [Thread-3:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:52:28,364 [Thread-3:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:52:28,364 [Thread-3:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:52:28,364 [Thread-3:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:52:28,366 [Thread-3:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:52:28,366 [Thread-3:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:52:28,367 [Thread-3:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc25fc88>
2018-08-09 17:52:28,404 [Thread-4:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:52:28,405 [Thread-4:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,405 [Thread-4:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:52:28,406 [Thread-5:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:52:28,406 [Thread-5:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:52:28,406 [Thread-5:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:52:28,408 [Thread-4:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:52:28,408 [Thread-4:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:52:28,408 [Thread-4:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:52:28,413 [Thread-5:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:52:28,413 [Thread-5:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:52:28,413 [Thread-5:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:20,500 [Thread-6:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:53:20,500 [Thread-6:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:53:20,564 [Thread-6:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:53:20,565 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:53:20,565 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:20,568 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:53:20,569 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:53:20,570 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:20,571 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:53:20,572 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:53:20,572 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:20,573 [Thread-6:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:53:21,042 [Thread-7:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:53:21,043 [Thread-7:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:53:21,140 [Thread-7:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:53:21,140 [Thread-7:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:53:21,140 [Thread-7:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:22,750 [Thread-8:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:53:22,750 [Thread-8:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:53:22,848 [Thread-8:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:53:22,868 [Thread-9:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:22,869 [Thread-9:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:53:22,876 [Thread-10:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:22,882 [Thread-10:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:53:22,881 [Thread-11:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:22,885 [Thread-11:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:53:22,998 [Thread-9:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:53:22,998 [Thread-9:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:22,998 [Thread-9:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:53:23,001 [Thread-9:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:53:23,001 [Thread-9:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:53:23,001 [Thread-9:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:23,003 [Thread-9:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:53:23,004 [Thread-9:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:53:23,004 [Thread-9:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc21ea08>
2018-08-09 17:53:23,045 [Thread-11:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:53:23,045 [Thread-11:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:23,045 [Thread-11:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:53:23,046 [Thread-10:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:53:23,049 [Thread-10:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:53:23,049 [Thread-10:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:53:23,051 [Thread-11:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:53:23,052 [Thread-11:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:53:23,052 [Thread-11:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:53:23,056 [Thread-10:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:53:23,058 [Thread-10:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:53:23,058 [Thread-10:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:54:03,376 [Thread-12:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:54:03,376 [Thread-12:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:54:03,466 [Thread-12:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:54:03,467 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:54:03,467 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:03,469 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:54:03,470 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:54:03,470 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:03,471 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:54:03,472 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:54:03,472 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:03,473 [Thread-12:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:54:03,792 [Thread-13:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:54:03,792 [Thread-13:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:54:03,866 [Thread-13:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:54:03,866 [Thread-13:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:54:03,867 [Thread-13:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:05,916 [Thread-14:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:54:05,917 [Thread-14:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:54:06,004 [Thread-14:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:54:06,023 [Thread-15:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,024 [Thread-15:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:54:06,027 [Thread-16:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,027 [Thread-16:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:54:06,031 [Thread-17:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,032 [Thread-17:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:54:06,136 [Thread-15:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:54:06,137 [Thread-15:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,137 [Thread-15:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:54:06,138 [Thread-16:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:54:06,138 [Thread-16:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,138 [Thread-16:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:54:06,139 [Thread-16:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:54:06,140 [Thread-16:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:54:06,140 [Thread-16:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:54:06,143 [Thread-15:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:54:06,143 [Thread-15:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:54:06,143 [Thread-15:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:06,145 [Thread-15:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:54:06,145 [Thread-15:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:54:06,145 [Thread-15:140406094292736] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc1b3508>
2018-08-09 17:54:06,176 [Thread-17:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:54:06,176 [Thread-17:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:06,176 [Thread-17:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:54:06,177 [Thread-17:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:54:06,178 [Thread-17:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:54:06,178 [Thread-17:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:22,862 [Thread-18:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:54:22,862 [Thread-18:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 17:54:22,936 [Thread-18:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 17:54:22,936 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 17:54:22,936 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:22,939 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 17:54:22,940 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 17:54:22,940 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:22,941 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 17:54:22,941 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 17:54:22,941 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:22,943 [Thread-18:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 17:54:23,318 [Thread-19:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 17:54:23,318 [Thread-19:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 17:54:23,409 [Thread-19:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 17:54:23,409 [Thread-19:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 17:54:23,409 [Thread-19:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:25,106 [Thread-20:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 17:54:25,107 [Thread-20:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 17:54:25,202 [Thread-20:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:54:25,220 [Thread-21:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,220 [Thread-21:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:54:25,226 [Thread-22:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,226 [Thread-22:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:54:25,229 [Thread-23:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,230 [Thread-23:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:54:25,413 [Thread-21:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 17:54:25,413 [Thread-21:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,413 [Thread-21:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 17:54:25,414 [Thread-22:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 17:54:25,414 [Thread-22:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,414 [Thread-22:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 17:54:25,415 [Thread-22:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 17:54:25,416 [Thread-22:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 17:54:25,416 [Thread-22:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 17:54:25,419 [Thread-21:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 17:54:25,419 [Thread-21:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 17:54:25,419 [Thread-21:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:25,420 [Thread-21:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 17:54:25,438 [Thread-23:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 17:54:25,438 [Thread-23:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 17:54:25,438 [Thread-23:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 17:54:25,440 [Thread-23:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 17:54:25,440 [Thread-23:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 17:54:25,440 [Thread-23:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 17:54:25,438 [Thread-21:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 17:54:25,442 [Thread-21:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc1c8508>
2018-08-09 18:02:13,772 [Thread-24:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:02:13,773 [Thread-24:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:02:13,852 [Thread-24:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:02:13,875 [Thread-25:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:13,875 [Thread-25:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:02:13,879 [Thread-26:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:13,879 [Thread-26:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:02:13,883 [Thread-27:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:13,883 [Thread-27:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:02:13,986 [Thread-25:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:02:13,986 [Thread-25:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:13,986 [Thread-25:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:02:13,987 [Thread-25:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:02:13,987 [Thread-25:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:02:13,988 [Thread-25:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:13,989 [Thread-25:140406104782592] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:02:13,989 [Thread-25:140406104782592] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:02:13,989 [Thread-25:140406104782592] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc1c85c8>
2018-08-09 18:02:14,036 [Thread-27:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:02:14,036 [Thread-27:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:14,036 [Thread-27:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:02:14,041 [Thread-26:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:02:14,042 [Thread-26:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:14,042 [Thread-26:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:02:14,045 [Thread-26:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:02:14,055 [Thread-27:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:02:14,056 [Thread-27:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:02:14,056 [Thread-27:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:14,055 [Thread-26:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:02:14,070 [Thread-26:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:02:53,089 [Thread-28:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:02:53,089 [Thread-28:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:02:53,155 [Thread-28:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:02:53,156 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:02:53,157 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:53,160 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:02:53,162 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:02:53,162 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:53,163 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:02:53,164 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:02:53,164 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:53,165 [Thread-28:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:02:53,521 [Thread-29:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:02:53,522 [Thread-29:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:02:53,587 [Thread-29:140406073313024] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:02:53,587 [Thread-29:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:02:53,587 [Thread-29:140406073313024] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:55,306 [Thread-30:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:02:55,306 [Thread-30:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:02:55,428 [Thread-30:140406073313024] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:02:55,472 [Thread-31:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,475 [Thread-31:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:02:55,474 [Thread-32:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,476 [Thread-32:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:02:55,483 [Thread-33:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,483 [Thread-33:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:02:55,624 [Thread-32:140406104782592] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:02:55,624 [Thread-32:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,624 [Thread-32:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:02:55,625 [Thread-33:140406094292736] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:02:55,625 [Thread-33:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,626 [Thread-33:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:02:55,627 [Thread-32:140406104782592] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:02:55,627 [Thread-32:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:02:55,627 [Thread-32:140406104782592] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:02:55,628 [Thread-33:140406094292736] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:02:55,628 [Thread-33:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:02:55,628 [Thread-33:140406094292736] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:55,666 [Thread-31:140406083802880] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:02:55,666 [Thread-31:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:02:55,667 [Thread-31:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:02:55,670 [Thread-31:140406083802880] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:02:55,670 [Thread-31:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:02:55,670 [Thread-31:140406083802880] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:02:55,675 [Thread-31:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:02:55,675 [Thread-31:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:02:55,675 [Thread-31:140406083802880] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7fb2dc220a88>
2018-08-09 18:03:40,473 [Thread-1:140288127399680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:03:40,474 [Thread-1:140288127399680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:03:40,549 [Thread-1:140288127399680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:03:40,573 [Thread-3:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,576 [Thread-3:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:03:40,575 [Thread-4:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,578 [Thread-4:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:03:40,588 [Thread-5:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,588 [Thread-5:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:03:40,683 [Thread-3:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:03:40,683 [Thread-3:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,683 [Thread-3:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:03:40,684 [Thread-3:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:03:40,684 [Thread-3:140288116107008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:03:40,684 [Thread-3:140288116107008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:03:40,686 [Thread-3:140288116107008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:03:40,686 [Thread-3:140288116107008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:03:40,686 [Thread-3:140288116107008] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f976403cec8>
2018-08-09 18:03:40,735 [Thread-5:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:03:40,735 [Thread-5:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,735 [Thread-5:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:03:40,737 [Thread-5:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:03:40,737 [Thread-5:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:03:40,738 [Thread-5:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:03:40,746 [Thread-4:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:03:40,746 [Thread-4:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:03:40,747 [Thread-4:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:03:40,754 [Thread-4:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:03:40,754 [Thread-4:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:03:40,754 [Thread-4:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:04:32,609 [Thread-6:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:04:32,609 [Thread-6:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:04:32,739 [Thread-6:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:04:32,791 [Thread-7:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:04:32,791 [Thread-7:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:04:32,867 [Thread-7:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:04:32,867 [Thread-7:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:04:32,868 [Thread-7:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:04:32,871 [Thread-7:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:04:32,872 [Thread-7:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:04:32,872 [Thread-7:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:14,101 [Thread-8:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:08:14,101 [Thread-8:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:08:14,203 [Thread-8:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:08:14,203 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:08:14,204 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:14,208 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:08:14,209 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:08:14,210 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:14,211 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:08:14,211 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:08:14,211 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:14,212 [Thread-8:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:08:14,641 [Thread-9:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:08:14,642 [Thread-9:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:08:14,763 [Thread-9:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:08:14,764 [Thread-9:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:08:14,764 [Thread-9:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:16,682 [Thread-10:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:08:16,682 [Thread-10:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:08:16,770 [Thread-10:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:08:16,787 [Thread-11:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:16,788 [Thread-11:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:08:16,792 [Thread-12:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:16,792 [Thread-12:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:08:16,821 [Thread-13:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:16,825 [Thread-13:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:08:16,903 [Thread-11:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:08:16,903 [Thread-11:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:16,903 [Thread-11:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:08:16,904 [Thread-11:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:08:16,904 [Thread-11:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:08:16,904 [Thread-11:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:16,905 [Thread-11:140288105617152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:08:16,906 [Thread-11:140288105617152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:08:16,906 [Thread-11:140288105617152] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f976408c8c8>
2018-08-09 18:08:16,998 [Thread-13:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:08:16,999 [Thread-13:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:16,999 [Thread-13:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:08:17,000 [Thread-12:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:08:17,000 [Thread-12:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:17,000 [Thread-12:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:08:17,001 [Thread-13:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:08:17,002 [Thread-13:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:08:17,002 [Thread-13:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:17,004 [Thread-12:140288116107008] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:08:17,005 [Thread-12:140288116107008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:08:17,006 [Thread-12:140288116107008] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:08:43,706 [Thread-14:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:08:43,706 [Thread-14:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:08:43,813 [Thread-14:140288116107008] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:08:43,831 [Thread-15:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:43,832 [Thread-15:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:08:43,838 [Thread-16:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:43,838 [Thread-16:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:08:43,841 [Thread-17:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:43,844 [Thread-17:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:08:43,998 [Thread-15:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:08:43,998 [Thread-15:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:43,999 [Thread-15:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:08:44,010 [Thread-17:140288095127296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:08:44,012 [Thread-17:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:44,012 [Thread-17:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:08:44,013 [Thread-16:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:08:44,014 [Thread-16:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:08:44,014 [Thread-16:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:08:44,017 [Thread-15:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:08:44,018 [Thread-15:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:08:44,018 [Thread-15:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:44,019 [Thread-17:140288095127296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:08:44,019 [Thread-17:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:08:44,019 [Thread-17:140288095127296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:08:44,021 [Thread-16:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:08:44,022 [Thread-16:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:08:44,022 [Thread-16:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:08:44,028 [Thread-15:140288127137536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:08:44,028 [Thread-15:140288127137536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:08:44,029 [Thread-15:140288127137536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d7104c8>
2018-08-09 18:09:33,502 [Thread-18:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:09:33,502 [Thread-18:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:09:33,576 [Thread-18:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:09:33,577 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:09:33,577 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:09:33,581 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:09:33,583 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:09:33,583 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:09:33,585 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:09:33,585 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:09:33,586 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:09:33,587 [Thread-18:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:09:48,413 [Thread-35:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:09:48,413 [Thread-35:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:09:48,529 [Thread-35:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:09:48,529 [Thread-35:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:09:48,530 [Thread-35:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:09:50,848 [Thread-39:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:09:50,849 [Thread-39:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:09:50,926 [Thread-39:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:09:51,556 [Thread-40:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:51,559 [Thread-40:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:09:51,729 [Thread-40:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:09:51,730 [Thread-40:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:51,731 [Thread-40:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:09:51,733 [Thread-40:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:09:51,733 [Thread-40:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:09:51,733 [Thread-40:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:09:51,736 [Thread-40:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:09:51,736 [Thread-40:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:09:51,737 [Thread-40:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d719b08>
2018-08-09 18:09:52,177 [Thread-41:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:52,177 [Thread-41:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:09:52,267 [Thread-41:140288105617152] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:09:52,267 [Thread-41:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:52,268 [Thread-41:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:09:52,269 [Thread-41:140288105617152] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:09:52,269 [Thread-41:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:09:52,269 [Thread-41:140288105617152] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:09:52,786 [Thread-42:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:52,786 [Thread-42:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:09:53,011 [Thread-42:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:09:53,011 [Thread-42:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:09:53,011 [Thread-42:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:09:53,021 [Thread-42:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:09:53,022 [Thread-42:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:09:53,025 [Thread-42:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:21,097 [Thread-51:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:11:21,098 [Thread-51:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:11:21,711 [Thread-51:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:11:21,712 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:11:21,712 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:21,717 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:11:21,720 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:11:21,720 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:21,723 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:11:21,724 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:11:21,724 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:21,726 [Thread-51:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:11:22,683 [Thread-67:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:11:22,684 [Thread-67:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:11:22,754 [Thread-67:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:11:22,755 [Thread-67:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:11:22,756 [Thread-67:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:28,345 [Thread-70:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:11:28,345 [Thread-70:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:11:28,451 [Thread-70:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:11:28,479 [Thread-71:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,480 [Thread-71:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:11:28,487 [Thread-72:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,487 [Thread-72:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:11:28,491 [Thread-73:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,491 [Thread-73:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:11:28,679 [Thread-71:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:11:28,680 [Thread-71:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,682 [Thread-72:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:11:28,689 [Thread-73:140288127137536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:11:28,693 [Thread-72:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,696 [Thread-72:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:11:28,693 [Thread-73:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:11:28,699 [Thread-73:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:11:28,692 [Thread-71:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:11:28,714 [Thread-73:140288127137536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:11:28,714 [Thread-73:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:11:28,715 [Thread-73:140288127137536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:28,716 [Thread-72:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:11:28,716 [Thread-72:140288106157824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:11:28,717 [Thread-72:140288106157824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:11:28,741 [Thread-71:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:11:28,741 [Thread-71:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:11:28,742 [Thread-71:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:11:28,749 [Thread-71:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:11:28,749 [Thread-71:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:11:28,750 [Thread-71:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffd7388>
2018-08-09 18:12:17,237 [Thread-82:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:12:17,237 [Thread-82:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:12:17,308 [Thread-82:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:12:17,308 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:12:17,309 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:12:17,315 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:12:17,319 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:12:17,319 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:12:17,322 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:12:17,322 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:12:17,323 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:12:17,325 [Thread-82:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:12:39,349 [Thread-84:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:12:39,351 [Thread-84:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:12:40,157 [Thread-84:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:12:40,868 [Thread-85:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:12:40,869 [Thread-85:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:12:40,965 [Thread-85:140288106157824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:12:40,966 [Thread-85:140288106157824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:12:40,966 [Thread-85:140288106157824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:12:52,728 [Thread-86:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:12:52,728 [Thread-86:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:12:52,875 [Thread-86:140288106157824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:12:52,906 [Thread-87:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:52,909 [Thread-87:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:12:52,913 [Thread-88:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:52,916 [Thread-88:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:12:52,918 [Thread-89:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:52,918 [Thread-89:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:12:53,034 [Thread-87:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:12:53,034 [Thread-87:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:53,034 [Thread-87:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:12:53,035 [Thread-88:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:12:53,035 [Thread-88:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:53,035 [Thread-88:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:12:53,036 [Thread-87:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:12:53,036 [Thread-87:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:12:53,036 [Thread-87:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:12:53,038 [Thread-88:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:12:53,038 [Thread-88:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:12:53,038 [Thread-88:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:12:53,042 [Thread-87:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:12:53,042 [Thread-87:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:12:53,042 [Thread-87:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff88608>
2018-08-09 18:12:53,074 [Thread-89:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:12:53,074 [Thread-89:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:12:53,074 [Thread-89:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:12:53,079 [Thread-89:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:12:53,082 [Thread-89:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:12:53,082 [Thread-89:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:47,169 [Thread-92:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:13:47,169 [Thread-92:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:13:47,235 [Thread-92:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:13:47,235 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:13:47,236 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:47,238 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:13:47,239 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:13:47,239 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:47,240 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:13:47,240 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:13:47,240 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:47,241 [Thread-92:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:13:47,568 [Thread-93:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:13:47,569 [Thread-93:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:13:47,626 [Thread-93:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:13:47,626 [Thread-93:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:13:47,627 [Thread-93:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:49,520 [Thread-94:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:13:49,521 [Thread-94:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:13:49,642 [Thread-94:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:13:49,687 [Thread-95:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,690 [Thread-95:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:13:49,690 [Thread-96:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,690 [Thread-96:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:13:49,701 [Thread-97:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,702 [Thread-97:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:13:49,802 [Thread-95:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:13:49,803 [Thread-95:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,803 [Thread-95:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:13:49,804 [Thread-95:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:13:49,804 [Thread-95:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:13:49,804 [Thread-95:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:49,806 [Thread-95:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:13:49,806 [Thread-95:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:13:49,806 [Thread-95:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fff71c8>
2018-08-09 18:13:49,849 [Thread-96:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:13:49,850 [Thread-96:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,850 [Thread-96:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:13:49,851 [Thread-97:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:13:49,851 [Thread-97:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:13:49,852 [Thread-97:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:13:49,853 [Thread-97:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:13:49,853 [Thread-97:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:13:49,853 [Thread-97:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:13:49,855 [Thread-96:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:13:49,856 [Thread-96:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:13:49,856 [Thread-96:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:14:42,374 [Thread-100:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:14:42,374 [Thread-100:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:14:42,455 [Thread-100:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:14:42,455 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:14:42,456 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:42,460 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:14:42,461 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:14:42,461 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:42,462 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:14:42,462 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:14:42,463 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:42,463 [Thread-100:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:14:42,834 [Thread-101:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:14:42,834 [Thread-101:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:14:42,904 [Thread-101:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:14:42,904 [Thread-101:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:14:42,905 [Thread-101:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:44,687 [Thread-102:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:14:44,687 [Thread-102:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:14:44,799 [Thread-102:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:14:44,828 [Thread-103:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,829 [Thread-103:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:14:44,833 [Thread-104:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,834 [Thread-104:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:14:44,844 [Thread-105:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,845 [Thread-105:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:14:44,977 [Thread-105:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:14:44,978 [Thread-105:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,978 [Thread-105:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:14:44,979 [Thread-103:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:14:44,979 [Thread-103:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,979 [Thread-103:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:14:44,982 [Thread-104:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:14:44,982 [Thread-104:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:14:44,982 [Thread-104:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:14:44,983 [Thread-103:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:14:44,983 [Thread-103:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:14:44,983 [Thread-103:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:44,985 [Thread-104:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:14:44,985 [Thread-104:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:14:44,985 [Thread-104:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:14:44,986 [Thread-105:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:14:44,986 [Thread-105:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:14:44,986 [Thread-105:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:14:44,997 [Thread-103:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:14:44,997 [Thread-103:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:14:44,997 [Thread-103:140288095667968] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffc5888>
2018-08-09 18:15:41,918 [Thread-108:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:15:41,919 [Thread-108:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:15:41,995 [Thread-108:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:15:41,996 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:15:41,996 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:42,000 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:15:42,001 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:15:42,001 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:42,003 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:15:42,004 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:15:42,004 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:42,006 [Thread-108:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:15:42,691 [Thread-109:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:15:42,697 [Thread-109:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:15:42,934 [Thread-109:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:15:42,934 [Thread-109:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:15:42,934 [Thread-109:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:45,120 [Thread-110:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:15:45,120 [Thread-110:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:15:45,223 [Thread-110:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:15:45,252 [Thread-111:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,253 [Thread-111:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:15:45,257 [Thread-112:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,258 [Thread-112:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:15:45,262 [Thread-113:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,262 [Thread-113:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:15:45,351 [Thread-111:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:15:45,352 [Thread-111:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,352 [Thread-111:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:15:45,353 [Thread-111:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:15:45,353 [Thread-111:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:15:45,353 [Thread-111:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:45,354 [Thread-111:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:15:45,354 [Thread-111:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:15:45,354 [Thread-111:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffc5e08>
2018-08-09 18:15:45,406 [Thread-113:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:15:45,406 [Thread-113:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,406 [Thread-113:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:15:45,408 [Thread-113:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:15:45,408 [Thread-113:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:15:45,408 [Thread-113:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:15:45,414 [Thread-112:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:15:45,414 [Thread-112:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:15:45,414 [Thread-112:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:15:45,416 [Thread-112:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:15:45,416 [Thread-112:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:15:45,416 [Thread-112:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:17:42,759 [Thread-117:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:17:42,759 [Thread-117:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:17:42,826 [Thread-117:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:17:42,826 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:17:42,826 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:42,828 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:17:42,829 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:17:42,829 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:42,830 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:17:42,831 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:17:42,831 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:42,832 [Thread-117:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:17:43,843 [Thread-134:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:17:43,844 [Thread-134:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:17:43,902 [Thread-134:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:17:43,902 [Thread-134:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:17:43,902 [Thread-134:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:45,082 [Thread-137:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:17:45,082 [Thread-137:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:17:45,185 [Thread-137:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:17:45,206 [Thread-138:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,209 [Thread-138:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:17:45,209 [Thread-139:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,212 [Thread-139:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:17:45,244 [Thread-140:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,252 [Thread-140:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:17:45,326 [Thread-138:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:17:45,327 [Thread-138:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,327 [Thread-138:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:17:45,328 [Thread-138:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:17:45,328 [Thread-138:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:17:45,328 [Thread-138:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:45,329 [Thread-138:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:17:45,329 [Thread-138:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:17:45,329 [Thread-138:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fffd8c8>
2018-08-09 18:17:45,373 [Thread-139:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:17:45,373 [Thread-139:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,374 [Thread-139:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:17:45,375 [Thread-140:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:17:45,375 [Thread-140:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:45,375 [Thread-140:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:17:45,377 [Thread-140:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:17:45,377 [Thread-140:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:17:45,377 [Thread-140:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:45,381 [Thread-139:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:17:45,382 [Thread-139:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:17:45,382 [Thread-139:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:17:58,910 [Thread-150:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:17:58,911 [Thread-150:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:17:59,037 [Thread-150:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:17:59,057 [Thread-151:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,058 [Thread-151:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:17:59,065 [Thread-152:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,069 [Thread-152:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:17:59,069 [Thread-153:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,071 [Thread-153:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:17:59,227 [Thread-152:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:17:59,228 [Thread-152:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,228 [Thread-152:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:17:59,229 [Thread-152:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:17:59,229 [Thread-152:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:17:59,229 [Thread-152:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:17:59,271 [Thread-153:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:17:59,271 [Thread-153:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,271 [Thread-153:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:17:59,272 [Thread-151:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:17:59,273 [Thread-151:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:17:59,273 [Thread-151:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:17:59,274 [Thread-153:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:17:59,274 [Thread-153:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:17:59,274 [Thread-153:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:59,275 [Thread-151:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:17:59,275 [Thread-151:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:17:59,275 [Thread-151:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:17:59,277 [Thread-151:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:17:59,277 [Thread-151:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:17:59,277 [Thread-151:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fffd1c8>
2018-08-09 18:18:37,191 [Thread-163:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:18:37,192 [Thread-163:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:18:37,271 [Thread-163:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:18:37,271 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:18:37,271 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:37,274 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:18:37,275 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:18:37,275 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:37,276 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:18:37,277 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:18:37,277 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:37,277 [Thread-163:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:18:38,365 [Thread-180:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:18:38,366 [Thread-180:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:18:38,430 [Thread-180:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:18:38,430 [Thread-180:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:18:38,431 [Thread-180:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:40,440 [Thread-183:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:18:40,440 [Thread-183:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:18:40,581 [Thread-183:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:18:40,599 [Thread-184:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,599 [Thread-184:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:18:40,610 [Thread-185:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,616 [Thread-185:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:18:40,616 [Thread-186:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,618 [Thread-186:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:18:40,723 [Thread-184:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:18:40,723 [Thread-184:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,723 [Thread-184:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:18:40,724 [Thread-184:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:18:40,724 [Thread-184:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:18:40,724 [Thread-184:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:40,725 [Thread-184:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:18:40,725 [Thread-184:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:18:40,725 [Thread-184:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d719e88>
2018-08-09 18:18:40,776 [Thread-186:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:18:40,776 [Thread-186:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,776 [Thread-186:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:18:40,777 [Thread-186:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:18:40,778 [Thread-186:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:18:40,778 [Thread-186:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:18:40,786 [Thread-185:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:18:40,786 [Thread-185:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:18:40,787 [Thread-185:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:18:40,793 [Thread-185:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:18:40,793 [Thread-185:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:18:40,793 [Thread-185:140288095667968] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:19:02,446 [Thread-196:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:19:02,447 [Thread-196:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:19:02,507 [Thread-196:140288095667968] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:19:02,507 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:19:02,508 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:02,510 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:19:02,511 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:19:02,511 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:02,512 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:19:02,512 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:19:02,512 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:02,513 [Thread-196:140288095667968] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:19:03,634 [Thread-213:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:19:03,634 [Thread-213:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:19:03,707 [Thread-213:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:19:03,707 [Thread-213:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:19:03,707 [Thread-213:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:05,199 [Thread-216:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:19:05,200 [Thread-216:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:19:05,317 [Thread-216:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:19:05,340 [Thread-217:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,344 [Thread-217:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:19:05,343 [Thread-218:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,359 [Thread-218:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:19:05,361 [Thread-219:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,362 [Thread-219:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:19:05,533 [Thread-217:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:19:05,534 [Thread-217:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,535 [Thread-217:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:19:05,542 [Thread-219:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:19:05,545 [Thread-219:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,545 [Thread-219:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:19:05,544 [Thread-218:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:19:05,547 [Thread-218:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:05,547 [Thread-218:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:19:05,550 [Thread-219:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:19:05,551 [Thread-219:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:19:05,551 [Thread-219:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:05,557 [Thread-218:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:19:05,558 [Thread-218:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:19:05,557 [Thread-217:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:19:05,559 [Thread-217:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:19:05,559 [Thread-217:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:05,559 [Thread-218:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:19:05,562 [Thread-217:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:19:05,563 [Thread-217:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:19:05,563 [Thread-217:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fffdbc8>
2018-08-09 18:19:20,451 [Thread-229:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:19:20,452 [Thread-229:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:19:20,518 [Thread-229:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:19:20,518 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:19:20,519 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:20,523 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:19:20,524 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:19:20,525 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:20,527 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:19:20,527 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:19:20,527 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:20,529 [Thread-229:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:19:21,902 [Thread-246:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:19:21,903 [Thread-246:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:19:21,982 [Thread-246:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:19:21,983 [Thread-246:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:19:21,983 [Thread-246:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:23,721 [Thread-249:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:19:23,722 [Thread-249:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:19:23,868 [Thread-249:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:19:23,896 [Thread-250:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:23,897 [Thread-250:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:19:23,902 [Thread-251:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:23,907 [Thread-251:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:19:23,906 [Thread-252:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:23,910 [Thread-252:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:19:24,082 [Thread-250:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:19:24,083 [Thread-250:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:24,083 [Thread-250:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:19:24,085 [Thread-250:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:19:24,085 [Thread-250:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:19:24,086 [Thread-250:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:24,087 [Thread-250:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:19:24,088 [Thread-250:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:19:24,088 [Thread-250:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fffd088>
2018-08-09 18:19:24,130 [Thread-251:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:19:24,131 [Thread-251:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:24,131 [Thread-251:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:19:24,137 [Thread-252:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:19:24,137 [Thread-252:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:19:24,137 [Thread-252:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:19:24,138 [Thread-252:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:19:24,138 [Thread-252:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:19:24,139 [Thread-252:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:19:24,145 [Thread-251:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:19:24,145 [Thread-251:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:19:24,145 [Thread-251:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:21:05,143 [Thread-262:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:21:05,143 [Thread-262:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:21:05,208 [Thread-262:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:21:05,209 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:21:05,209 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:05,211 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:21:05,212 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:21:05,212 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:05,213 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:21:05,213 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:21:05,213 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:05,214 [Thread-262:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:21:06,258 [Thread-279:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:21:06,258 [Thread-279:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:21:06,324 [Thread-279:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:21:06,324 [Thread-279:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:21:06,324 [Thread-279:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:07,959 [Thread-282:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:21:07,959 [Thread-282:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:21:08,187 [Thread-282:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:21:08,216 [Thread-283:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,218 [Thread-283:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:21:08,225 [Thread-284:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,234 [Thread-284:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:21:08,233 [Thread-285:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,244 [Thread-285:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:21:08,400 [Thread-283:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:21:08,400 [Thread-283:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,400 [Thread-283:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:21:08,401 [Thread-283:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:21:08,402 [Thread-283:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:21:08,402 [Thread-283:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:08,403 [Thread-283:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:21:08,403 [Thread-283:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:21:08,403 [Thread-283:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d72f588>
2018-08-09 18:21:08,450 [Thread-284:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:21:08,451 [Thread-284:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,451 [Thread-284:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:21:08,454 [Thread-285:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:21:08,454 [Thread-285:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:21:08,454 [Thread-285:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:21:08,455 [Thread-285:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:21:08,456 [Thread-285:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:21:08,456 [Thread-285:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:21:08,456 [Thread-284:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:21:08,457 [Thread-284:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:21:08,457 [Thread-284:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:23:02,687 [Thread-295:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:23:02,687 [Thread-295:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:23:02,833 [Thread-295:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:23:02,854 [Thread-296:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:02,854 [Thread-296:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:23:02,929 [Thread-297:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:02,929 [Thread-297:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:23:02,958 [Thread-298:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:02,959 [Thread-298:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:23:03,040 [Thread-296:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:23:03,041 [Thread-296:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:03,041 [Thread-296:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:23:03,048 [Thread-296:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:23:03,050 [Thread-296:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:23:03,051 [Thread-296:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:23:03,056 [Thread-296:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:23:03,056 [Thread-296:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:23:03,056 [Thread-296:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffd5b88>
2018-08-09 18:23:03,222 [Thread-298:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:23:03,223 [Thread-298:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:03,223 [Thread-298:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:23:03,224 [Thread-297:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:23:03,225 [Thread-297:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:23:03,225 [Thread-297:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:23:03,226 [Thread-298:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:23:03,227 [Thread-298:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:23:03,227 [Thread-298:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:23:03,229 [Thread-297:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:23:03,230 [Thread-297:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:23:03,230 [Thread-297:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:25:25,078 [Thread-308:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:25:25,079 [Thread-308:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:25:25,143 [Thread-308:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:25:25,143 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:25:25,143 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:25,145 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:25:25,146 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:25:25,146 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:25,147 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:25:25,147 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:25:25,147 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:25,148 [Thread-308:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:25:26,260 [Thread-325:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:25:26,260 [Thread-325:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:25:26,326 [Thread-325:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:25:26,327 [Thread-325:140287714256640] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:25:26,327 [Thread-325:140287714256640] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:28,749 [Thread-328:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:25:28,750 [Thread-328:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:25:28,834 [Thread-328:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:25:28,855 [Thread-329:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:28,856 [Thread-329:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:25:28,864 [Thread-330:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:28,870 [Thread-330:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:25:28,870 [Thread-331:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:28,873 [Thread-331:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:25:28,984 [Thread-329:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:25:28,985 [Thread-329:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:28,985 [Thread-329:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:25:28,986 [Thread-329:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:25:28,986 [Thread-329:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:25:28,987 [Thread-329:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:28,988 [Thread-329:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:25:28,988 [Thread-329:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:25:28,988 [Thread-329:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d719a48>
2018-08-09 18:25:29,033 [Thread-330:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:25:29,033 [Thread-330:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:29,033 [Thread-330:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:25:29,035 [Thread-331:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:25:29,035 [Thread-331:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:29,035 [Thread-331:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:25:29,038 [Thread-330:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:25:29,039 [Thread-330:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:25:29,039 [Thread-330:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:25:29,040 [Thread-331:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:25:29,040 [Thread-331:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:25:29,041 [Thread-331:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:43,021 [Thread-341:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:25:43,022 [Thread-341:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:25:43,085 [Thread-341:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:25:43,085 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:25:43,085 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:43,088 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:25:43,089 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:25:43,089 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:43,090 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:25:43,090 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:25:43,090 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:43,091 [Thread-341:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:25:44,070 [Thread-358:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:25:44,071 [Thread-358:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:25:44,135 [Thread-358:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:25:44,135 [Thread-358:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:25:44,136 [Thread-358:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:47,221 [Thread-361:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:25:47,222 [Thread-361:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:25:47,328 [Thread-361:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:25:47,349 [Thread-362:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,350 [Thread-362:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:25:47,352 [Thread-363:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,352 [Thread-363:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:25:47,365 [Thread-364:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,367 [Thread-364:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:25:47,477 [Thread-363:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:25:47,478 [Thread-363:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,478 [Thread-363:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:25:47,479 [Thread-363:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:25:47,479 [Thread-363:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:25:47,479 [Thread-363:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:25:47,521 [Thread-364:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:25:47,521 [Thread-364:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,521 [Thread-364:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:25:47,522 [Thread-362:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:25:47,522 [Thread-362:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:25:47,522 [Thread-362:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:25:47,523 [Thread-362:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:25:47,523 [Thread-362:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:25:47,523 [Thread-362:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:47,525 [Thread-364:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:25:47,525 [Thread-364:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:25:47,525 [Thread-364:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:25:47,527 [Thread-362:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:25:47,527 [Thread-362:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:25:47,527 [Thread-362:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f976406b8c8>
2018-08-09 18:26:12,705 [Thread-374:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:26:12,705 [Thread-374:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery'}
2018-08-09 18:26:12,782 [Thread-374:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoSwitchQuery', 'URL_DIV': 'redoSwitchQueryDIV', 'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'EXTEND_RESPONSE_URL': 'redoQueryChart.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoFileQuery', 'URL_DIV': 'redoFileQueryDIV', 'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoLogQuery', 'URL_DIV': 'redoLogQueryDIV', 'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 18:26:12,800 [Thread-375:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,801 [Thread-375:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 18:26:12,807 [Thread-376:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,809 [Thread-376:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 18:26:12,813 [Thread-377:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,814 [Thread-377:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 18:26:12,922 [Thread-375:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'RESPONSE_URL': 'redoQueryChart.html'}]
2018-08-09 18:26:12,923 [Thread-375:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,923 [Thread-375:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 18:26:12,924 [Thread-375:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '00',\n                  1,\n                  0)) H00,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '01',\n                  1,\n                  0)) H01,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '02',\n                  1,\n                  0)) H02,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '03',\n                  1,\n                  0)) H03,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '04',\n                  1,\n                  0)) H04,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '05',\n                  1,\n                  0)) H05,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '06',\n                  1,\n                  0)) H06,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '07',\n                  1,\n                  0)) H07,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '08',\n                  1,\n                  0)) H08,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '09',\n                  1,\n                  0)) H09,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '10',\n                  1,\n                  0)) H10,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '11',\n                  1,\n                  0)) H11,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '12',\n                  1,\n                  0)) H12,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '13',\n                  1,\n                  0)) H13,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '14',\n                  1,\n                  0)) H14,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '15',\n                  1,\n                  0)) H15,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '16',\n                  1,\n                  0)) H16,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '17',\n                  1,\n                  0)) H17,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '18',\n                  1,\n                  0)) H18,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '19',\n                  1,\n                  0)) H19,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '20',\n                  1,\n                  0)) H20,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '21',\n                  1,\n                  0)) H21,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '22',\n                  1,\n                  0)) H22,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '23',\n                  1,\n                  0)) H23,\n       COUNT(*) TOTAL\n  FROM v$log_history a\n GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)\n ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)", 'resultBindList': {}}
2018-08-09 18:26:12,924 [Thread-375:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '00',
                  1,
                  0)) H00,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '01',
                  1,
                  0)) H01,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '02',
                  1,
                  0)) H02,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '03',
                  1,
                  0)) H03,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '04',
                  1,
                  0)) H04,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '05',
                  1,
                  0)) H05,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '06',
                  1,
                  0)) H06,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '07',
                  1,
                  0)) H07,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '08',
                  1,
                  0)) H08,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '09',
                  1,
                  0)) H09,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '10',
                  1,
                  0)) H10,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '11',
                  1,
                  0)) H11,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '12',
                  1,
                  0)) H12,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '13',
                  1,
                  0)) H13,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '14',
                  1,
                  0)) H14,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '15',
                  1,
                  0)) H15,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '16',
                  1,
                  0)) H16,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '17',
                  1,
                  0)) H17,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '18',
                  1,
                  0)) H18,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '19',
                  1,
                  0)) H19,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '20',
                  1,
                  0)) H20,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '21',
                  1,
                  0)) H21,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '22',
                  1,
                  0)) H22,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '23',
                  1,
                  0)) H23,
       COUNT(*) TOTAL
  FROM v$log_history a
 GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
 ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
2018-08-09 18:26:12,924 [Thread-375:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:26:12,964 [Thread-377:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 18:26:12,965 [Thread-377:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,965 [Thread-377:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 18:26:12,966 [Thread-376:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 18:26:12,966 [Thread-376:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:12,966 [Thread-376:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 18:26:12,967 [Thread-376:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"\n  FROM GV$LOGFILE\n ORDER BY 1, 2', 'resultBindList': {}}
2018-08-09 18:26:12,967 [Thread-376:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"
  FROM GV$LOGFILE
 ORDER BY 1, 2
2018-08-09 18:26:12,967 [Thread-376:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:26:12,968 [Thread-377:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID",\n       GROUP# "日志组",\n       SEQUENCE# "日志序号",\n       BYTES / 1024 / 1024 "日志大小(MB)",\n       BLOCKSIZE "块大小",\n       MEMBERS "成员",\n       ARCHIVED "是否归档",\n       STATUS "状态",\n       TO_CHAR(FIRST_TIME, \'YYYY-MM-DD HH24:MI\') "最小时间",\n       NVL(TO_CHAR(NEXT_TIME, \'YYYY-MM-DD HH24:MI\'), \' \') "最大时间"\n  FROM GV$LOG\n  ORDER BY INST_ID, GROUP#', 'resultBindList': {}}
2018-08-09 18:26:12,969 [Thread-377:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID",
       GROUP# "日志组",
       SEQUENCE# "日志序号",
       BYTES / 1024 / 1024 "日志大小(MB)",
       BLOCKSIZE "块大小",
       MEMBERS "成员",
       ARCHIVED "是否归档",
       STATUS "状态",
       TO_CHAR(FIRST_TIME, 'YYYY-MM-DD HH24:MI') "最小时间",
       NVL(TO_CHAR(NEXT_TIME, 'YYYY-MM-DD HH24:MI'), ' ') "最大时间"
  FROM GV$LOG
  ORDER BY INST_ID, GROUP#
2018-08-09 18:26:12,969 [Thread-377:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:26:21,521 [Thread-380:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:26:21,521 [Thread-380:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery'}
2018-08-09 18:26:21,642 [Thread-380:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'controlQuery', 'URL_DIV': 'controlQueryDIV', 'URL_TAB': 'controlQueryTAB', 'ACTION_DESC': '控制文件信息', 'EXTEND_RESPONSE_URL': 'commTabDisplay.html'}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'controlFileInfoQuery', 'URL_DIV': 'controlFileInfoQueryDIV', 'URL_TAB': 'controlFileInfoQueryTAB', 'ACTION_DESC': '控制文件内容信息', 'EXTEND_RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 18:26:21,703 [Thread-381:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:21,704 [Thread-381:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlQuery'}
2018-08-09 18:26:21,708 [Thread-382:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:21,709 [Thread-382:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlFileInfoQuery'}
2018-08-09 18:26:21,797 [Thread-381:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'controlQueryTAB', 'ACTION_DESC': '控制文件信息', 'RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 18:26:21,797 [Thread-381:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:21,797 [Thread-381:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlQuery'}
2018-08-09 18:26:21,798 [Thread-381:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "序号", NAME "控制文件名称", BLOCK_SIZE "文件块大小" FROM V$CONTROLFILE', 'resultBindList': {}}
2018-08-09 18:26:21,798 [Thread-381:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "序号", NAME "控制文件名称", BLOCK_SIZE "文件块大小" FROM V$CONTROLFILE
2018-08-09 18:26:21,798 [Thread-381:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:26:21,842 [Thread-382:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'controlFileInfoQueryTAB', 'ACTION_DESC': '控制文件内容信息', 'RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 18:26:21,843 [Thread-382:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:26:21,843 [Thread-382:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlFileInfoQuery'}
2018-08-09 18:26:21,850 [Thread-382:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$CONTROLFILE_RECORD_SECTION', 'resultBindList': {}}
2018-08-09 18:26:21,850 [Thread-382:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$CONTROLFILE_RECORD_SECTION
2018-08-09 18:26:21,850 [Thread-382:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:40,994 [Thread-385:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:27:40,995 [Thread-385:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:27:41,061 [Thread-385:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:27:41,061 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:27:41,061 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:41,063 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:27:41,064 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:27:41,064 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:41,065 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:27:41,066 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:27:41,066 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:41,066 [Thread-385:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:27:42,094 [Thread-402:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:27:42,095 [Thread-402:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:27:42,171 [Thread-402:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:27:42,171 [Thread-402:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:27:42,172 [Thread-402:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:44,296 [Thread-405:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:27:44,298 [Thread-405:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:27:44,437 [Thread-405:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:27:44,469 [Thread-406:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,472 [Thread-406:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:27:44,471 [Thread-407:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,473 [Thread-407:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:27:44,481 [Thread-408:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,481 [Thread-408:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:27:44,587 [Thread-406:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:27:44,587 [Thread-406:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,588 [Thread-406:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:27:44,589 [Thread-406:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:27:44,590 [Thread-406:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:27:44,590 [Thread-406:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:44,592 [Thread-406:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:27:44,592 [Thread-406:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:27:44,592 [Thread-406:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d7199c8>
2018-08-09 18:27:44,634 [Thread-407:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:27:44,634 [Thread-407:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,635 [Thread-407:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:27:44,636 [Thread-408:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:27:44,636 [Thread-408:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:27:44,636 [Thread-408:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:27:44,637 [Thread-408:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:27:44,637 [Thread-408:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:27:44,637 [Thread-408:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:44,639 [Thread-407:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:27:44,639 [Thread-407:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:27:44,640 [Thread-407:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:27:57,045 [Thread-418:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:27:57,046 [Thread-418:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:27:57,153 [Thread-418:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:27:57,153 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:27:57,153 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:57,155 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:27:57,157 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:27:57,157 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:57,158 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:27:57,158 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:27:57,158 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:27:57,159 [Thread-418:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:27:58,267 [Thread-435:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:27:58,268 [Thread-435:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:27:58,328 [Thread-435:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:27:58,329 [Thread-435:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:27:58,329 [Thread-435:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:00,230 [Thread-438:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:28:00,230 [Thread-438:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:28:00,329 [Thread-438:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:28:00,347 [Thread-439:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,348 [Thread-439:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:28:00,355 [Thread-440:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,355 [Thread-440:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:28:00,363 [Thread-441:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,364 [Thread-441:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:28:00,470 [Thread-439:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:28:00,471 [Thread-439:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,471 [Thread-439:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:28:00,472 [Thread-439:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:28:00,472 [Thread-439:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:28:00,472 [Thread-439:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:00,473 [Thread-439:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:28:00,473 [Thread-439:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:28:00,473 [Thread-439:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f9764073908>
2018-08-09 18:28:00,519 [Thread-441:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:28:00,520 [Thread-441:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,520 [Thread-441:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:28:00,520 [Thread-440:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:28:00,521 [Thread-440:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:00,521 [Thread-440:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:28:00,522 [Thread-440:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:28:00,522 [Thread-440:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:28:00,522 [Thread-440:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:28:00,524 [Thread-441:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:28:00,525 [Thread-441:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:28:00,525 [Thread-441:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:36,485 [Thread-451:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:28:36,485 [Thread-451:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:28:36,547 [Thread-451:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:28:36,548 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:28:36,548 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:36,550 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:28:36,551 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:28:36,551 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:36,552 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:28:36,553 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:28:36,553 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:36,554 [Thread-451:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:28:37,633 [Thread-468:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:28:37,633 [Thread-468:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:28:37,696 [Thread-468:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:28:37,697 [Thread-468:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:28:37,697 [Thread-468:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:39,085 [Thread-471:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:28:39,085 [Thread-471:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:28:39,215 [Thread-471:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:28:39,239 [Thread-472:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,239 [Thread-472:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:28:39,259 [Thread-473:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,274 [Thread-473:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:28:39,277 [Thread-474:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,277 [Thread-474:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:28:39,356 [Thread-472:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:28:39,357 [Thread-472:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,357 [Thread-472:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:28:39,358 [Thread-472:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:28:39,358 [Thread-472:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:28:39,358 [Thread-472:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:39,360 [Thread-472:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:28:39,360 [Thread-472:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:28:39,360 [Thread-472:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f976753e5c8>
2018-08-09 18:28:39,396 [Thread-473:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:28:39,396 [Thread-473:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,396 [Thread-473:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:28:39,397 [Thread-474:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:28:39,397 [Thread-474:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:28:39,397 [Thread-474:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:28:39,399 [Thread-474:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:28:39,399 [Thread-474:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:28:39,399 [Thread-474:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:28:39,401 [Thread-473:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:28:39,404 [Thread-473:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:28:39,404 [Thread-473:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:29:11,610 [Thread-484:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:29:11,611 [Thread-484:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:29:11,676 [Thread-484:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:29:11,676 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:29:11,676 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:11,680 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:29:11,681 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:29:11,681 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:11,683 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:29:11,683 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:29:11,684 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:11,685 [Thread-484:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:29:12,827 [Thread-501:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:29:12,827 [Thread-501:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:29:12,925 [Thread-501:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:29:12,925 [Thread-501:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:29:12,925 [Thread-501:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:14,541 [Thread-504:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:29:14,542 [Thread-504:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:29:14,642 [Thread-504:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:29:14,664 [Thread-505:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,665 [Thread-505:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:29:14,728 [Thread-505:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:29:14,728 [Thread-505:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,728 [Thread-505:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:29:14,730 [Thread-505:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:29:14,730 [Thread-505:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:29:14,730 [Thread-505:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:14,734 [Thread-506:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,750 [Thread-506:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:29:14,734 [Thread-505:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:29:14,751 [Thread-505:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:29:14,751 [Thread-505:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff85b08>
2018-08-09 18:29:14,750 [Thread-507:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,760 [Thread-507:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:29:14,862 [Thread-507:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:29:14,863 [Thread-507:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,863 [Thread-507:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:29:14,866 [Thread-507:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:29:14,866 [Thread-507:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:29:14,867 [Thread-507:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:29:14,897 [Thread-506:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:29:14,897 [Thread-506:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:29:14,898 [Thread-506:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:29:14,899 [Thread-506:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:29:14,900 [Thread-506:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:29:14,900 [Thread-506:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:32:01,106 [Thread-517:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:32:01,107 [Thread-517:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:32:01,173 [Thread-517:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:32:01,174 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:32:01,174 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:01,180 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:32:01,181 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:32:01,181 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:01,184 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:32:01,184 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:32:01,185 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:01,185 [Thread-517:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:32:02,285 [Thread-534:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:32:02,286 [Thread-534:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:32:02,348 [Thread-534:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:32:02,348 [Thread-534:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:32:02,348 [Thread-534:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:03,886 [Thread-537:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:32:03,887 [Thread-537:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:32:03,979 [Thread-537:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:32:04,000 [Thread-538:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,000 [Thread-538:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:32:04,008 [Thread-539:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,008 [Thread-539:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:32:04,014 [Thread-540:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,014 [Thread-540:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:32:04,122 [Thread-538:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:32:04,122 [Thread-538:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,123 [Thread-538:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:32:04,124 [Thread-538:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:32:04,124 [Thread-538:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:32:04,124 [Thread-538:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:04,125 [Thread-538:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:32:04,125 [Thread-538:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:32:04,126 [Thread-538:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff851c8>
2018-08-09 18:32:04,163 [Thread-540:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:32:04,163 [Thread-540:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,163 [Thread-540:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:32:04,165 [Thread-539:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:32:04,165 [Thread-539:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:04,166 [Thread-539:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:32:04,167 [Thread-540:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:32:04,168 [Thread-540:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:32:04,168 [Thread-540:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:04,170 [Thread-539:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:32:04,170 [Thread-539:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:32:04,170 [Thread-539:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:32:39,327 [Thread-550:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:32:39,328 [Thread-550:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:32:39,433 [Thread-550:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:32:39,451 [Thread-551:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,453 [Thread-551:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:32:39,462 [Thread-552:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,465 [Thread-552:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:32:39,464 [Thread-553:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,466 [Thread-553:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:32:39,583 [Thread-551:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:32:39,583 [Thread-551:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,584 [Thread-551:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:32:39,585 [Thread-551:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:32:39,585 [Thread-551:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:32:39,585 [Thread-551:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:32:39,586 [Thread-551:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:32:39,587 [Thread-551:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:32:39,587 [Thread-551:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff88148>
2018-08-09 18:32:39,630 [Thread-552:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:32:39,631 [Thread-552:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,631 [Thread-552:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:32:39,633 [Thread-553:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:32:39,634 [Thread-553:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:32:39,635 [Thread-553:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:32:39,637 [Thread-552:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:32:39,637 [Thread-552:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:32:39,637 [Thread-552:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:32:39,638 [Thread-553:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:32:39,638 [Thread-553:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:32:39,639 [Thread-553:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:36:26,704 [Thread-563:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:36:26,704 [Thread-563:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:36:26,859 [Thread-563:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:36:26,886 [Thread-564:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:26,889 [Thread-564:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:36:26,889 [Thread-565:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:26,890 [Thread-565:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:36:26,900 [Thread-566:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:26,902 [Thread-566:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:36:27,015 [Thread-564:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:36:27,015 [Thread-564:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:27,015 [Thread-564:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:36:27,017 [Thread-564:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:36:27,018 [Thread-564:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:36:27,018 [Thread-564:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:36:27,020 [Thread-564:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:36:27,020 [Thread-564:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:36:27,020 [Thread-564:140288116385536] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff85f48>
2018-08-09 18:36:27,065 [Thread-565:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:36:27,066 [Thread-565:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:27,066 [Thread-565:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:36:27,069 [Thread-565:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:36:27,069 [Thread-565:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:36:27,071 [Thread-565:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:36:27,073 [Thread-566:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:36:27,074 [Thread-566:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:36:27,074 [Thread-566:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:36:27,079 [Thread-566:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:36:27,084 [Thread-566:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:36:27,091 [Thread-566:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:29,914 [Thread-576:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:40:29,915 [Thread-576:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:40:29,998 [Thread-576:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:40:29,999 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:40:29,999 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:30,002 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:40:30,002 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:40:30,002 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:30,004 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:40:30,004 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:40:30,004 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:30,005 [Thread-576:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:40:31,109 [Thread-593:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:40:31,110 [Thread-593:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:40:31,174 [Thread-593:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:40:31,175 [Thread-593:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:40:31,175 [Thread-593:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:32,628 [Thread-596:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:40:32,628 [Thread-596:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:40:32,778 [Thread-596:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:40:32,811 [Thread-597:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:32,814 [Thread-597:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:40:32,814 [Thread-598:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:32,815 [Thread-598:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:40:32,826 [Thread-599:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:32,826 [Thread-599:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:40:32,966 [Thread-599:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:40:32,966 [Thread-599:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:32,966 [Thread-599:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:40:32,967 [Thread-599:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:40:32,968 [Thread-599:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:40:32,968 [Thread-599:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:33,049 [Thread-598:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:40:33,049 [Thread-598:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:33,049 [Thread-598:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:40:33,051 [Thread-597:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:40:33,051 [Thread-597:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:40:33,051 [Thread-597:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:40:33,054 [Thread-597:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:40:33,054 [Thread-597:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:40:33,055 [Thread-597:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:40:33,057 [Thread-598:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:40:33,057 [Thread-598:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:40:33,074 [Thread-598:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:40:33,075 [Thread-597:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:40:33,076 [Thread-597:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:40:33,076 [Thread-597:140288084375296] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffa58c8>
2018-08-09 18:41:44,461 [Thread-608:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:41:44,462 [Thread-608:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:41:44,539 [Thread-608:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:41:44,539 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:41:44,539 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:41:44,544 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:41:44,545 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:41:44,545 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:41:44,547 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:41:44,547 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:41:44,548 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:41:44,549 [Thread-608:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:41:45,689 [Thread-625:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:41:45,690 [Thread-625:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:41:45,787 [Thread-625:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:41:45,787 [Thread-625:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:41:45,787 [Thread-625:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:41:48,054 [Thread-628:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:41:48,055 [Thread-628:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:41:48,221 [Thread-628:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:41:48,240 [Thread-629:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,240 [Thread-629:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:41:48,245 [Thread-630:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,245 [Thread-630:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:41:48,251 [Thread-631:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,252 [Thread-631:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:41:48,480 [Thread-629:140288126875392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:41:48,480 [Thread-629:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,480 [Thread-629:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:41:48,481 [Thread-629:140288126875392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:41:48,482 [Thread-629:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:41:48,482 [Thread-629:140288126875392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:41:48,483 [Thread-629:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:41:48,483 [Thread-629:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:41:48,483 [Thread-629:140288126875392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffa5448>
2018-08-09 18:41:48,527 [Thread-630:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:41:48,529 [Thread-630:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,529 [Thread-630:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:41:48,529 [Thread-631:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:41:48,531 [Thread-631:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:41:48,531 [Thread-631:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:41:48,533 [Thread-630:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:41:48,533 [Thread-630:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:41:48,534 [Thread-630:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:41:48,535 [Thread-631:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:41:48,536 [Thread-631:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:41:48,537 [Thread-631:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:49:25,976 [Thread-650:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:49:25,977 [Thread-650:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:49:26,073 [Thread-650:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:49:26,073 [Thread-650:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:49:26,074 [Thread-650:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:49:28,354 [Thread-653:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:49:28,355 [Thread-653:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:49:28,490 [Thread-653:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:49:28,592 [Thread-654:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,592 [Thread-654:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:49:28,594 [Thread-655:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,595 [Thread-655:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:49:28,616 [Thread-656:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,616 [Thread-656:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:49:28,736 [Thread-654:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:49:28,737 [Thread-654:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,737 [Thread-654:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:49:28,739 [Thread-654:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:49:28,740 [Thread-654:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:49:28,740 [Thread-654:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:49:28,743 [Thread-654:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:49:28,744 [Thread-654:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:49:28,744 [Thread-654:140288095405824] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff85588>
2018-08-09 18:49:28,851 [Thread-655:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:49:28,852 [Thread-655:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,852 [Thread-655:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:49:28,853 [Thread-656:140288116385536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:49:28,853 [Thread-656:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:49:28,853 [Thread-656:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:49:28,855 [Thread-656:140288116385536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:49:28,855 [Thread-656:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:49:28,855 [Thread-656:140288116385536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:49:28,857 [Thread-655:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:49:28,857 [Thread-655:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:49:28,857 [Thread-655:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:55:19,312 [Thread-658:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:55:19,312 [Thread-658:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:55:19,371 [Thread-658:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:55:19,371 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:55:19,371 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:19,374 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:55:19,374 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:55:19,375 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:19,377 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:55:19,377 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:55:19,378 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:19,379 [Thread-658:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:55:20,414 [Thread-675:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:55:20,414 [Thread-675:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:55:20,479 [Thread-675:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:55:20,479 [Thread-675:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:55:20,479 [Thread-675:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:24,072 [Thread-678:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:55:24,072 [Thread-678:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:55:24,197 [Thread-678:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:55:24,244 [Thread-679:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,245 [Thread-679:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:55:24,247 [Thread-680:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,248 [Thread-680:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:55:24,252 [Thread-681:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,252 [Thread-681:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:55:24,356 [Thread-680:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:55:24,356 [Thread-680:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,357 [Thread-680:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:55:24,358 [Thread-680:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:55:24,358 [Thread-680:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:55:24,359 [Thread-680:140288095405824] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:55:24,396 [Thread-679:140288105895680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:55:24,396 [Thread-679:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,396 [Thread-679:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:55:24,399 [Thread-681:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:55:24,399 [Thread-681:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:55:24,399 [Thread-681:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:55:24,401 [Thread-679:140288105895680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:55:24,401 [Thread-679:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:55:24,401 [Thread-679:140288105895680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:24,401 [Thread-681:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:55:24,401 [Thread-681:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:55:24,402 [Thread-681:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:55:24,407 [Thread-679:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:55:24,407 [Thread-679:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:55:24,407 [Thread-679:140288105895680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffc5848>
2018-08-09 18:57:39,781 [Thread-683:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:57:39,782 [Thread-683:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 18:57:39,856 [Thread-683:140288095405824] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 18:57:39,857 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 18:57:39,857 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:39,859 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 18:57:39,860 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 18:57:39,860 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:39,861 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 18:57:39,862 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 18:57:39,862 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:39,863 [Thread-683:140288095405824] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 18:57:41,113 [Thread-700:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 18:57:41,114 [Thread-700:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 18:57:41,188 [Thread-700:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 18:57:41,189 [Thread-700:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 18:57:41,189 [Thread-700:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:42,635 [Thread-703:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:57:42,636 [Thread-703:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:57:42,782 [Thread-703:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:57:42,815 [Thread-704:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:42,816 [Thread-704:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:57:42,824 [Thread-705:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:42,833 [Thread-705:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:57:42,831 [Thread-706:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:42,838 [Thread-706:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:57:42,987 [Thread-704:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:57:42,987 [Thread-704:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:42,988 [Thread-704:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:57:42,993 [Thread-705:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:57:42,997 [Thread-705:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:42,997 [Thread-705:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:57:42,999 [Thread-705:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:57:42,999 [Thread-705:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:57:43,000 [Thread-705:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:57:42,997 [Thread-706:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:57:43,001 [Thread-706:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:57:43,001 [Thread-706:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:57:43,003 [Thread-704:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:57:43,004 [Thread-704:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:57:43,004 [Thread-704:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:43,006 [Thread-706:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:57:43,006 [Thread-706:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:57:43,006 [Thread-706:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:57:43,011 [Thread-704:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:57:43,011 [Thread-704:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:57:43,012 [Thread-704:140287724746496] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff8f888>
2018-08-09 18:58:03,616 [Thread-708:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:58:03,617 [Thread-708:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:58:03,733 [Thread-708:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:58:03,753 [Thread-709:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:03,765 [Thread-709:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:58:03,768 [Thread-711:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:03,778 [Thread-711:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:58:03,757 [Thread-710:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:03,784 [Thread-710:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:58:03,958 [Thread-709:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:58:03,959 [Thread-709:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:03,960 [Thread-709:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:58:03,966 [Thread-709:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:58:03,966 [Thread-709:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:58:03,967 [Thread-709:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:58:03,970 [Thread-709:140288116123392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:58:03,971 [Thread-709:140288116123392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:58:03,971 [Thread-709:140288116123392] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f9764073a88>
2018-08-09 18:58:04,038 [Thread-710:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:58:04,038 [Thread-710:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:04,040 [Thread-710:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:58:04,040 [Thread-711:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:58:04,044 [Thread-711:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:04,044 [Thread-711:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:58:04,046 [Thread-711:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:58:04,046 [Thread-711:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:58:04,046 [Thread-711:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:58:04,052 [Thread-710:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:58:04,053 [Thread-710:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:58:04,053 [Thread-710:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 18:58:25,472 [Thread-713:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 18:58:25,472 [Thread-713:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 18:58:25,587 [Thread-713:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:58:25,605 [Thread-714:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,605 [Thread-714:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:58:25,615 [Thread-715:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,619 [Thread-715:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:58:25,617 [Thread-716:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,620 [Thread-716:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:58:25,792 [Thread-714:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 18:58:25,792 [Thread-714:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,792 [Thread-714:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 18:58:25,793 [Thread-714:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 18:58:25,793 [Thread-714:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 18:58:25,793 [Thread-714:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:58:25,794 [Thread-714:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 18:58:25,795 [Thread-714:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 18:58:25,795 [Thread-714:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffb13c8>
2018-08-09 18:58:25,840 [Thread-716:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 18:58:25,840 [Thread-716:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,841 [Thread-716:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 18:58:25,842 [Thread-715:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 18:58:25,842 [Thread-715:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 18:58:25,845 [Thread-715:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 18:58:25,844 [Thread-716:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 18:58:25,846 [Thread-716:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 18:58:25,846 [Thread-716:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 18:58:25,852 [Thread-715:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 18:58:25,853 [Thread-715:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 18:58:25,853 [Thread-715:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:00:05,915 [Thread-718:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:00:05,916 [Thread-718:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery'}
2018-08-09 19:00:06,025 [Thread-718:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoSwitchQuery', 'URL_DIV': 'redoSwitchQueryDIV', 'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'EXTEND_RESPONSE_URL': 'redoQueryChart.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoFileQuery', 'URL_DIV': 'redoFileQueryDIV', 'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoLogQuery', 'URL_DIV': 'redoLogQueryDIV', 'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:00:06,045 [Thread-719:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,046 [Thread-719:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 19:00:06,052 [Thread-720:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,052 [Thread-720:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 19:00:06,077 [Thread-721:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,078 [Thread-721:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 19:00:06,208 [Thread-719:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'RESPONSE_URL': 'redoQueryChart.html'}]
2018-08-09 19:00:06,208 [Thread-719:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,208 [Thread-719:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 19:00:06,210 [Thread-719:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '00',\n                  1,\n                  0)) H00,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '01',\n                  1,\n                  0)) H01,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '02',\n                  1,\n                  0)) H02,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '03',\n                  1,\n                  0)) H03,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '04',\n                  1,\n                  0)) H04,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '05',\n                  1,\n                  0)) H05,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '06',\n                  1,\n                  0)) H06,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '07',\n                  1,\n                  0)) H07,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '08',\n                  1,\n                  0)) H08,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '09',\n                  1,\n                  0)) H09,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '10',\n                  1,\n                  0)) H10,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '11',\n                  1,\n                  0)) H11,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '12',\n                  1,\n                  0)) H12,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '13',\n                  1,\n                  0)) H13,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '14',\n                  1,\n                  0)) H14,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '15',\n                  1,\n                  0)) H15,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '16',\n                  1,\n                  0)) H16,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '17',\n                  1,\n                  0)) H17,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '18',\n                  1,\n                  0)) H18,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '19',\n                  1,\n                  0)) H19,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '20',\n                  1,\n                  0)) H20,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '21',\n                  1,\n                  0)) H21,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '22',\n                  1,\n                  0)) H22,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '23',\n                  1,\n                  0)) H23,\n       COUNT(*) TOTAL\n  FROM v$log_history a\n GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)\n ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)", 'resultBindList': {}}
2018-08-09 19:00:06,210 [Thread-719:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '00',
                  1,
                  0)) H00,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '01',
                  1,
                  0)) H01,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '02',
                  1,
                  0)) H02,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '03',
                  1,
                  0)) H03,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '04',
                  1,
                  0)) H04,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '05',
                  1,
                  0)) H05,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '06',
                  1,
                  0)) H06,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '07',
                  1,
                  0)) H07,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '08',
                  1,
                  0)) H08,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '09',
                  1,
                  0)) H09,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '10',
                  1,
                  0)) H10,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '11',
                  1,
                  0)) H11,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '12',
                  1,
                  0)) H12,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '13',
                  1,
                  0)) H13,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '14',
                  1,
                  0)) H14,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '15',
                  1,
                  0)) H15,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '16',
                  1,
                  0)) H16,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '17',
                  1,
                  0)) H17,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '18',
                  1,
                  0)) H18,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '19',
                  1,
                  0)) H19,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '20',
                  1,
                  0)) H20,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '21',
                  1,
                  0)) H21,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '22',
                  1,
                  0)) H22,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '23',
                  1,
                  0)) H23,
       COUNT(*) TOTAL
  FROM v$log_history a
 GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
 ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
2018-08-09 19:00:06,210 [Thread-719:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:00:06,289 [Thread-720:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:00:06,289 [Thread-720:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,290 [Thread-720:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 19:00:06,291 [Thread-721:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:00:06,291 [Thread-721:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:00:06,291 [Thread-721:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 19:00:06,293 [Thread-720:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"\n  FROM GV$LOGFILE\n ORDER BY 1, 2', 'resultBindList': {}}
2018-08-09 19:00:06,293 [Thread-720:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"
  FROM GV$LOGFILE
 ORDER BY 1, 2
2018-08-09 19:00:06,294 [Thread-720:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:00:06,295 [Thread-721:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID",\n       GROUP# "日志组",\n       SEQUENCE# "日志序号",\n       BYTES / 1024 / 1024 "日志大小(MB)",\n       BLOCKSIZE "块大小",\n       MEMBERS "成员",\n       ARCHIVED "是否归档",\n       STATUS "状态",\n       TO_CHAR(FIRST_TIME, \'YYYY-MM-DD HH24:MI\') "最小时间",\n       NVL(TO_CHAR(NEXT_TIME, \'YYYY-MM-DD HH24:MI\'), \' \') "最大时间"\n  FROM GV$LOG\n  ORDER BY INST_ID, GROUP#', 'resultBindList': {}}
2018-08-09 19:00:06,296 [Thread-721:140288095143680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID",
       GROUP# "日志组",
       SEQUENCE# "日志序号",
       BYTES / 1024 / 1024 "日志大小(MB)",
       BLOCKSIZE "块大小",
       MEMBERS "成员",
       ARCHIVED "是否归档",
       STATUS "状态",
       TO_CHAR(FIRST_TIME, 'YYYY-MM-DD HH24:MI') "最小时间",
       NVL(TO_CHAR(NEXT_TIME, 'YYYY-MM-DD HH24:MI'), ' ') "最大时间"
  FROM GV$LOG
  ORDER BY INST_ID, GROUP#
2018-08-09 19:00:06,296 [Thread-721:140288095143680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:01:28,146 [Thread-724:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:01:28,147 [Thread-724:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 19:01:28,264 [Thread-724:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:01:28,287 [Thread-725:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,288 [Thread-725:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:01:28,297 [Thread-726:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,302 [Thread-726:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:01:28,302 [Thread-727:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,325 [Thread-727:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:01:28,414 [Thread-725:140288095143680] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 19:01:28,414 [Thread-725:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,415 [Thread-725:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:01:28,416 [Thread-725:140288095143680] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 19:01:28,416 [Thread-725:140288095143680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 19:01:28,416 [Thread-725:140288095143680] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:01:28,417 [Thread-725:140288095143680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 19:01:28,417 [Thread-725:140288095143680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 19:01:28,417 [Thread-725:140288095143680] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975fff7a48>
2018-08-09 19:01:28,470 [Thread-726:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 19:01:28,471 [Thread-726:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,471 [Thread-726:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:01:28,474 [Thread-726:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 19:01:28,474 [Thread-726:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 19:01:28,474 [Thread-726:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:01:28,485 [Thread-727:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:01:28,486 [Thread-727:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:01:28,488 [Thread-727:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:01:28,494 [Thread-727:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 19:01:28,494 [Thread-727:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 19:01:28,494 [Thread-727:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:40,071 [Thread-729:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:02:40,072 [Thread-729:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:02:40,144 [Thread-729:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:02:40,144 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:02:40,145 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:40,147 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:02:40,147 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:02:40,148 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:40,149 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:02:40,149 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:02:40,149 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:40,151 [Thread-729:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:02:41,278 [Thread-746:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:02:41,278 [Thread-746:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:02:41,343 [Thread-746:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:02:41,344 [Thread-746:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:02:41,344 [Thread-746:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:46,264 [Thread-749:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:02:46,265 [Thread-749:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 19:02:46,353 [Thread-749:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:02:46,371 [Thread-750:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,372 [Thread-750:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:02:46,379 [Thread-751:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,380 [Thread-751:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:02:46,381 [Thread-752:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,382 [Thread-752:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:02:46,504 [Thread-752:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:02:46,504 [Thread-752:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,504 [Thread-752:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:02:46,506 [Thread-752:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 19:02:46,506 [Thread-752:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 19:02:46,506 [Thread-752:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:46,548 [Thread-751:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 19:02:46,548 [Thread-751:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,548 [Thread-751:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:02:46,549 [Thread-750:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 19:02:46,549 [Thread-750:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:02:46,549 [Thread-750:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:02:46,552 [Thread-751:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 19:02:46,553 [Thread-751:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 19:02:46,553 [Thread-751:140287724746496] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:02:46,558 [Thread-750:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 19:02:46,558 [Thread-750:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 19:02:46,558 [Thread-750:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:02:46,560 [Thread-750:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 19:02:46,560 [Thread-750:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 19:02:46,560 [Thread-750:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffb1508>
2018-08-09 19:03:53,147 [Thread-754:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:03:53,148 [Thread-754:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:03:53,226 [Thread-754:140287724746496] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:03:53,227 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:03:53,227 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:03:53,229 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:03:53,230 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:03:53,230 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:03:53,232 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:03:53,233 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:03:53,233 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:03:53,234 [Thread-754:140287724746496] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:03:54,500 [Thread-771:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:03:54,501 [Thread-771:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:03:54,568 [Thread-771:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:03:54,568 [Thread-771:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:03:54,568 [Thread-771:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:04:34,540 [Thread-774:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:04:34,540 [Thread-774:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:04:34,680 [Thread-774:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:04:34,680 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:04:34,681 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:04:34,686 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:04:34,688 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:04:34,688 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:04:34,690 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:04:34,690 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:04:34,690 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:04:34,693 [Thread-774:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:04:36,080 [Thread-791:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:04:36,081 [Thread-791:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:04:36,152 [Thread-791:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:04:36,152 [Thread-791:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:04:36,152 [Thread-791:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:00,093 [Thread-794:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:05:00,093 [Thread-794:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:05:00,200 [Thread-794:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:05:00,201 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:05:00,201 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:00,204 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:05:00,205 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:05:00,206 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:00,207 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:05:00,207 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:05:00,207 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:00,208 [Thread-794:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:05:01,408 [Thread-811:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:05:01,408 [Thread-811:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:05:01,481 [Thread-811:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:05:01,481 [Thread-811:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:05:01,482 [Thread-811:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:42,710 [Thread-814:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:05:42,710 [Thread-814:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:05:42,790 [Thread-814:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:05:42,790 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:05:42,790 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:42,793 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:05:42,793 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:05:42,794 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:42,798 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:05:42,799 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:05:42,799 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:05:42,801 [Thread-814:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:05:44,034 [Thread-831:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:05:44,034 [Thread-831:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:05:44,090 [Thread-831:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:05:44,090 [Thread-831:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:05:44,091 [Thread-831:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:14:10,112 [Thread-834:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:14:10,112 [Thread-834:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:14:10,184 [Thread-834:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:14:10,185 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:14:10,185 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:14:10,190 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:14:10,191 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:14:10,191 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:14:10,193 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:14:10,193 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:14:10,194 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:14:10,195 [Thread-834:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:14:11,237 [Thread-851:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:14:11,238 [Thread-851:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:14:11,302 [Thread-851:140287714256640] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:14:11,302 [Thread-851:140287714256640] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:14:11,302 [Thread-851:140287714256640] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:20:13,790 [Thread-854:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:20:13,790 [Thread-854:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 19:20:13,919 [Thread-854:140287714256640] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:20:13,937 [Thread-855:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:13,938 [Thread-855:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:20:13,946 [Thread-856:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:13,953 [Thread-856:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:20:13,953 [Thread-857:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:13,957 [Thread-857:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:20:14,086 [Thread-855:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 19:20:14,087 [Thread-855:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:14,087 [Thread-855:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:20:14,088 [Thread-855:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 19:20:14,089 [Thread-855:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 19:20:14,089 [Thread-855:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:20:14,090 [Thread-855:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 19:20:14,090 [Thread-855:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 19:20:14,090 [Thread-855:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975d719208>
2018-08-09 19:20:14,136 [Thread-856:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 19:20:14,137 [Thread-856:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:14,137 [Thread-856:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:20:14,140 [Thread-857:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:20:14,140 [Thread-857:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:20:14,141 [Thread-857:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:20:14,143 [Thread-857:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 19:20:14,143 [Thread-857:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 19:20:14,143 [Thread-857:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:20:14,144 [Thread-856:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 19:20:14,145 [Thread-856:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 19:20:14,145 [Thread-856:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:21:56,336 [Thread-859:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:21:56,336 [Thread-859:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:21:56,394 [Thread-859:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:21:56,395 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:21:56,395 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:21:56,397 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:21:56,398 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:21:56,398 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:21:56,399 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:21:56,399 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:21:56,399 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:21:56,400 [Thread-859:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:21:57,413 [Thread-876:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:21:57,414 [Thread-876:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:21:57,503 [Thread-876:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:21:57,504 [Thread-876:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:21:57,504 [Thread-876:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:22:23,738 [Thread-879:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:22:23,738 [Thread-879:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:22:23,803 [Thread-879:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:22:23,803 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:22:23,803 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:22:23,806 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:22:23,807 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:22:23,807 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:22:23,808 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:22:23,808 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:22:23,808 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:22:23,809 [Thread-879:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:22:24,305 [Thread-880:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:22:24,305 [Thread-880:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:22:24,361 [Thread-880:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:22:24,361 [Thread-880:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:22:24,361 [Thread-880:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:05,990 [Thread-881:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:05,991 [Thread-881:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:23:06,072 [Thread-881:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:23:06,072 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:23:06,073 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:06,076 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:23:06,076 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:23:06,077 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:06,078 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:23:06,078 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:23:06,079 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:06,080 [Thread-881:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:23:06,633 [Thread-882:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:06,633 [Thread-882:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:23:06,697 [Thread-882:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:23:06,697 [Thread-882:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:23:06,698 [Thread-882:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:34,489 [Thread-883:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:34,490 [Thread-883:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:23:34,550 [Thread-883:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:23:34,550 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:23:34,550 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:34,553 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:23:34,554 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:23:34,554 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:34,555 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:23:34,555 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:23:34,556 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:34,557 [Thread-883:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:23:34,912 [Thread-884:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:34,912 [Thread-884:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:23:35,098 [Thread-884:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:23:35,099 [Thread-884:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:23:35,099 [Thread-884:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:50,611 [Thread-885:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:50,611 [Thread-885:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:23:50,676 [Thread-885:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:23:50,676 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:23:50,676 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:50,678 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:23:50,679 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:23:50,679 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:50,680 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:23:50,680 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:23:50,680 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:23:50,681 [Thread-885:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:23:51,011 [Thread-886:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:23:51,011 [Thread-886:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:23:51,084 [Thread-886:140288084375296] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:23:51,084 [Thread-886:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:23:51,085 [Thread-886:140288084375296] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:12,766 [Thread-887:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:24:12,766 [Thread-887:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 19:24:12,861 [Thread-887:140288084375296] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:24:12,879 [Thread-888:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:12,879 [Thread-888:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:24:12,883 [Thread-889:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:12,883 [Thread-889:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:24:12,886 [Thread-890:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:12,886 [Thread-890:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:24:12,997 [Thread-888:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 19:24:12,998 [Thread-888:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:12,998 [Thread-888:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:24:13,001 [Thread-888:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 19:24:13,001 [Thread-888:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 19:24:13,001 [Thread-888:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:13,003 [Thread-888:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 19:24:13,004 [Thread-888:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 19:24:13,004 [Thread-888:140288073885440] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ffb1448>
2018-08-09 19:24:13,063 [Thread-889:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 19:24:13,064 [Thread-889:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:13,064 [Thread-889:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:24:13,066 [Thread-889:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 19:24:13,066 [Thread-889:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 19:24:13,066 [Thread-889:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:24:13,109 [Thread-890:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:24:13,109 [Thread-890:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:13,110 [Thread-890:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:24:13,111 [Thread-890:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 19:24:13,112 [Thread-890:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 19:24:13,112 [Thread-890:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:15,214 [Thread-891:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:24:15,214 [Thread-891:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery'}
2018-08-09 19:24:15,311 [Thread-891:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoSwitchQuery', 'URL_DIV': 'redoSwitchQueryDIV', 'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'EXTEND_RESPONSE_URL': 'redoQueryChart.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoFileQuery', 'URL_DIV': 'redoFileQueryDIV', 'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'redoLogQuery', 'URL_DIV': 'redoLogQueryDIV', 'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'EXTEND_RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:24:15,330 [Thread-892:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,331 [Thread-892:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 19:24:15,336 [Thread-893:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,339 [Thread-893:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 19:24:15,341 [Thread-894:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,343 [Thread-894:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 19:24:15,444 [Thread-893:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoFileQueryTAB', 'ACTION_DESC': '日志文件信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:24:15,444 [Thread-893:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,445 [Thread-893:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoFileQuery'}
2018-08-09 19:24:15,446 [Thread-893:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"\n  FROM GV$LOGFILE\n ORDER BY 1, 2', 'resultBindList': {}}
2018-08-09 19:24:15,446 [Thread-893:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID", GROUP# "日志组", TYPE "日志类型", MEMBER "日志组成员"
  FROM GV$LOGFILE
 ORDER BY 1, 2
2018-08-09 19:24:15,446 [Thread-893:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:15,515 [Thread-894:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoLogQueryTAB', 'ACTION_DESC': '日志组信息', 'RESPONSE_URL': 'redoQuery.html'}]
2018-08-09 19:24:15,515 [Thread-894:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,515 [Thread-894:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoLogQuery'}
2018-08-09 19:24:15,516 [Thread-892:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'redoSwitchQueryTAB', 'ACTION_DESC': '日志切换信息', 'RESPONSE_URL': 'redoQueryChart.html'}]
2018-08-09 19:24:15,516 [Thread-892:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:15,516 [Thread-892:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'redoQuery', 'URL_ACTION': 'redoSwitchQuery'}
2018-08-09 19:24:15,518 [Thread-894:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT INST_ID "实例ID",\n       GROUP# "日志组",\n       SEQUENCE# "日志序号",\n       BYTES / 1024 / 1024 "日志大小(MB)",\n       BLOCKSIZE "块大小",\n       MEMBERS "成员",\n       ARCHIVED "是否归档",\n       STATUS "状态",\n       TO_CHAR(FIRST_TIME, \'YYYY-MM-DD HH24:MI\') "最小时间",\n       NVL(TO_CHAR(NEXT_TIME, \'YYYY-MM-DD HH24:MI\'), \' \') "最大时间"\n  FROM GV$LOG\n  ORDER BY INST_ID, GROUP#', 'resultBindList': {}}
2018-08-09 19:24:15,518 [Thread-894:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT INST_ID "实例ID",
       GROUP# "日志组",
       SEQUENCE# "日志序号",
       BYTES / 1024 / 1024 "日志大小(MB)",
       BLOCKSIZE "块大小",
       MEMBERS "成员",
       ARCHIVED "是否归档",
       STATUS "状态",
       TO_CHAR(FIRST_TIME, 'YYYY-MM-DD HH24:MI') "最小时间",
       NVL(TO_CHAR(NEXT_TIME, 'YYYY-MM-DD HH24:MI'), ' ') "最大时间"
  FROM GV$LOG
  ORDER BY INST_ID, GROUP#
2018-08-09 19:24:15,518 [Thread-894:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:15,520 [Thread-892:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '00',\n                  1,\n                  0)) H00,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '01',\n                  1,\n                  0)) H01,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '02',\n                  1,\n                  0)) H02,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '03',\n                  1,\n                  0)) H03,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '04',\n                  1,\n                  0)) H04,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '05',\n                  1,\n                  0)) H05,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '06',\n                  1,\n                  0)) H06,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '07',\n                  1,\n                  0)) H07,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '08',\n                  1,\n                  0)) H08,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '09',\n                  1,\n                  0)) H09,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '10',\n                  1,\n                  0)) H10,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '11',\n                  1,\n                  0)) H11,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '12',\n                  1,\n                  0)) H12,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '13',\n                  1,\n                  0)) H13,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '14',\n                  1,\n                  0)) H14,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '15',\n                  1,\n                  0)) H15,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '16',\n                  1,\n                  0)) H16,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '17',\n                  1,\n                  0)) H17,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '18',\n                  1,\n                  0)) H18,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '19',\n                  1,\n                  0)) H19,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '20',\n                  1,\n                  0)) H20,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '21',\n                  1,\n                  0)) H21,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '22',\n                  1,\n                  0)) H22,\n       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),\n                  '23',\n                  1,\n                  0)) H23,\n       COUNT(*) TOTAL\n  FROM v$log_history a\n GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)\n ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)", 'resultBindList': {}}
2018-08-09 19:24:15,520 [Thread-892:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10) DAY,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '00',
                  1,
                  0)) H00,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '01',
                  1,
                  0)) H01,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '02',
                  1,
                  0)) H02,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '03',
                  1,
                  0)) H03,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '04',
                  1,
                  0)) H04,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '05',
                  1,
                  0)) H05,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '06',
                  1,
                  0)) H06,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '07',
                  1,
                  0)) H07,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '08',
                  1,
                  0)) H08,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '09',
                  1,
                  0)) H09,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '10',
                  1,
                  0)) H10,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '11',
                  1,
                  0)) H11,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '12',
                  1,
                  0)) H12,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '13',
                  1,
                  0)) H13,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '14',
                  1,
                  0)) H14,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '15',
                  1,
                  0)) H15,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '16',
                  1,
                  0)) H16,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '17',
                  1,
                  0)) H17,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '18',
                  1,
                  0)) H18,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '19',
                  1,
                  0)) H19,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '20',
                  1,
                  0)) H20,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '21',
                  1,
                  0)) H21,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '22',
                  1,
                  0)) H22,
       SUM(DECODE(SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI:SS'), 12, 2),
                  '23',
                  1,
                  0)) H23,
       COUNT(*) TOTAL
  FROM v$log_history a
 GROUP BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
 ORDER BY SUBSTR(TO_CHAR(first_time, 'YYYY-MM-DD HH:MI:SS'), 1, 10)
2018-08-09 19:24:15,520 [Thread-892:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:16,214 [Thread-895:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:24:16,214 [Thread-895:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery'}
2018-08-09 19:24:16,298 [Thread-895:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'controlQuery', 'URL_DIV': 'controlQueryDIV', 'URL_TAB': 'controlQueryTAB', 'ACTION_DESC': '控制文件信息', 'EXTEND_RESPONSE_URL': 'commTabDisplay.html'}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'controlFileInfoQuery', 'URL_DIV': 'controlFileInfoQueryDIV', 'URL_TAB': 'controlFileInfoQueryTAB', 'ACTION_DESC': '控制文件内容信息', 'EXTEND_RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 19:24:16,359 [Thread-896:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:16,359 [Thread-896:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlQuery'}
2018-08-09 19:24:16,364 [Thread-897:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:16,364 [Thread-897:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlFileInfoQuery'}
2018-08-09 19:24:16,445 [Thread-896:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'controlQueryTAB', 'ACTION_DESC': '控制文件信息', 'RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 19:24:16,445 [Thread-896:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:16,445 [Thread-896:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlQuery'}
2018-08-09 19:24:16,446 [Thread-896:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "序号", NAME "控制文件名称", BLOCK_SIZE "文件块大小" FROM V$CONTROLFILE', 'resultBindList': {}}
2018-08-09 19:24:16,447 [Thread-896:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "序号", NAME "控制文件名称", BLOCK_SIZE "文件块大小" FROM V$CONTROLFILE
2018-08-09 19:24:16,447 [Thread-896:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:16,473 [Thread-897:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'controlFileInfoQueryTAB', 'ACTION_DESC': '控制文件内容信息', 'RESPONSE_URL': 'commTabDisplay.html'}]
2018-08-09 19:24:16,473 [Thread-897:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:16,474 [Thread-897:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'controlQuery', 'URL_ACTION': 'controlFileInfoQuery'}
2018-08-09 19:24:16,477 [Thread-897:140288116123392] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$CONTROLFILE_RECORD_SECTION', 'resultBindList': {}}
2018-08-09 19:24:16,477 [Thread-897:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$CONTROLFILE_RECORD_SECTION
2018-08-09 19:24:16,477 [Thread-897:140288116123392] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:56,952 [Thread-899:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL.MENU_NAME,
       URL.MENU_URL,
       NVL(URL.RESPONSE_URL, '#') RESPONSE_URL,
       EXT.URL_EXTEND_FUNC,
       EXT.URL_EXTEND_ACTION,
       EXT.URL_EXTEND_ACTION||'DIV' URL_DIV,
       EXT.URL_EXTEND_ACTION||'TAB' URL_TAB,
       EXT.ACTION_DESC,
       EXT.RESPONSE_URL EXTEND_RESPONSE_URL
  FROM DBMP_SYS_MENU_URL URL, DBMP_MENU_URL_EXTEND EXT
 WHERE URL.MENU_URL = EXT.MENU_URL
   AND URL.MENU_URL = :MENU_URL
 ORDER BY EXT.ORDER_FLAG
2018-08-09 19:24:56,952 [Thread-899:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery'}
2018-08-09 19:24:57,032 [Thread-899:140288116123392] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceChart', 'URL_DIV': 'tableSpaceChartDIV', 'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'tableSpaceChart.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'tableSpaceQuery', 'URL_DIV': 'tableSpaceQueryDIV', 'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'EXTEND_RESPONSE_URL': 'tableSpaceQuery.html'}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'RESPONSE_URL': 'commMenuInit.html', 'URL_EXTEND_FUNC': 'commURLSQLQuery', 'URL_EXTEND_ACTION': 'dataFileQuery', 'URL_DIV': 'dataFileQueryDIV', 'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'EXTEND_RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:24:57,055 [Thread-900:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,056 [Thread-900:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:24:57,064 [Thread-901:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,064 [Thread-901:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:24:57,139 [Thread-902:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_ACTION|| 'TAB' URL_TAB, ACTION_DESC, RESPONSE_URL
  FROM DBMP_MENU_URL_EXTEND
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,143 [Thread-902:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:24:57,247 [Thread-900:140288126613248] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceChartTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'tableSpaceChart.html'}]
2018-08-09 19:24:57,247 [Thread-900:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,248 [Thread-900:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceChart'}
2018-08-09 19:24:57,249 [Thread-900:140288126613248] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM V$PGA', 'resultBindList': {}}
2018-08-09 19:24:57,249 [Thread-900:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM V$PGA
2018-08-09 19:24:57,249 [Thread-900:140288126613248] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:57,250 [Thread-900:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <class 'django.db.utils.DatabaseError'>
2018-08-09 19:24:57,251 [Thread-900:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: ORA-00942: table or view does not exist
2018-08-09 19:24:57,251 [Thread-900:140288126613248] [DALUtil:getSQLResultWithColName] [ERROR]- 查询数据库异常: <traceback object at 0x7f975ff85608>
2018-08-09 19:24:57,292 [Thread-901:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'tableSpaceQueryTAB', 'ACTION_DESC': '表空间信息', 'RESPONSE_URL': 'tableSpaceQuery.html'}]
2018-08-09 19:24:57,292 [Thread-901:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,292 [Thread-901:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'tableSpaceQuery'}
2018-08-09 19:24:57,293 [Thread-902:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'URL_TAB': 'dataFileQueryTAB', 'ACTION_DESC': '数据文件信息', 'RESPONSE_URL': 'dbinfo_index.html'}]
2018-08-09 19:24:57,293 [Thread-902:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
   AND URL_EXTEND_ACTION = :URL_ACTION
   AND ROWNUM = 1 
2018-08-09 19:24:57,293 [Thread-902:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'tableSpaceQuery', 'URL_ACTION': 'dataFileQuery'}
2018-08-09 19:24:57,294 [Thread-902:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT * FROM DBA_DATA_FILES', 'resultBindList': {}}
2018-08-09 19:24:57,295 [Thread-902:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT * FROM DBA_DATA_FILES
2018-08-09 19:24:57,295 [Thread-902:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:24:57,297 [Thread-901:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': "SELECT *\n  FROM (SELECT d.tablespace_name NAME,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(u.bytes, 0) / 1048576,\n                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),\n                       '999G999G999') Used_MB,\n               TO_CHAR(DECODE(d.contents,\n                              'UNDO',\n                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,\n                              NVL(f.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(DECODE(d.contents,\n                            'UNDO',\n                            NVL(u.bytes / a.bytes * 100, 0),\n                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),\n                     2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_data_files\n                 GROUP BY tablespace_name) a,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM dba_free_space\n                 GROUP BY tablespace_name) f,\n               (SELECT tablespace_name, SUM(bytes) bytes\n                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'ACTIVE'\n                         GROUP BY tablespace_name, status\n                        UNION ALL\n                        SELECT tablespace_name, SUM(bytes) bytes, status\n                          FROM dba_undo_extents\n                         WHERE status = 'UNEXPIRED'\n                         GROUP BY tablespace_name, status)\n                 GROUP BY tablespace_name) u\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = f.tablespace_name(+)\n           AND d.tablespace_name = u.tablespace_name(+)\n           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')\n        UNION ALL\n        SELECT d.tablespace_name,\n               d.status,\n               d.contents,\n               a.file_cnt,\n               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,\n               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,\n               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),\n                       '999G999G999') FREE_MB,\n               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO\n          FROM sys.dba_tablespaces d,\n               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt\n                  FROM dba_temp_files\n                 GROUP BY tablespace_name) a,\n               (SELECT ss.tablespace_name,\n                       SUM((ss.used_blocks * ts.blocksize)) bytes\n                  FROM gv$sort_segment ss, sys.ts$ ts\n                 WHERE ss.tablespace_name = ts.name\n                 GROUP BY ss.tablespace_name) t\n         WHERE d.tablespace_name = a.tablespace_name(+)\n           AND d.tablespace_name = t.tablespace_name(+)\n           AND d.extent_management = 'LOCAL'\n           AND d.contents = 'TEMPORARY')\n WHERE USED_RATIO >= :USED_RATIO\n ORDER BY USED_RATIO DESC", 'resultBindList': {'USED_RATIO': '1'}}
2018-08-09 19:24:57,297 [Thread-901:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT *
  FROM (SELECT d.tablespace_name NAME,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(u.bytes, 0) / 1048576,
                              NVL(a.bytes - NVL(f.bytes, 0), 0) / 1048576),
                       '999G999G999') Used_MB,
               TO_CHAR(DECODE(d.contents,
                              'UNDO',
                              NVL(a.bytes - NVL(u.bytes, 0), 0) / 1048576,
                              NVL(f.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(DECODE(d.contents,
                            'UNDO',
                            NVL(u.bytes / a.bytes * 100, 0),
                            NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0)),
                     2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_data_files
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM dba_free_space
                 GROUP BY tablespace_name) f,
               (SELECT tablespace_name, SUM(bytes) bytes
                  FROM (SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'ACTIVE'
                         GROUP BY tablespace_name, status
                        UNION ALL
                        SELECT tablespace_name, SUM(bytes) bytes, status
                          FROM dba_undo_extents
                         WHERE status = 'UNEXPIRED'
                         GROUP BY tablespace_name, status)
                 GROUP BY tablespace_name) u
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = f.tablespace_name(+)
           AND d.tablespace_name = u.tablespace_name(+)
           AND NOT (d.extent_management = 'LOCAL' AND d.contents = 'TEMPORARY')
        UNION ALL
        SELECT d.tablespace_name,
               d.status,
               d.contents,
               a.file_cnt,
               TO_CHAR(NVL(a.bytes / 1048576, 0), '999G999G999') SIZE_MB,
               TO_CHAR(NVL(t.bytes, 0) / 1048576, '999G999G999') Used_MB,
               TO_CHAR((NVL(a.bytes, 0) / 1048576 - NVL(t.bytes, 0) / 1048576),
                       '999G999G999') FREE_MB,
               ROUND(NVL(t.bytes / a.bytes * 100, 0), 2) USED_RATIO
          FROM sys.dba_tablespaces d,
               (SELECT tablespace_name, SUM(bytes) bytes, COUNT(file_id) file_cnt
                  FROM dba_temp_files
                 GROUP BY tablespace_name) a,
               (SELECT ss.tablespace_name,
                       SUM((ss.used_blocks * ts.blocksize)) bytes
                  FROM gv$sort_segment ss, sys.ts$ ts
                 WHERE ss.tablespace_name = ts.name
                 GROUP BY ss.tablespace_name) t
         WHERE d.tablespace_name = a.tablespace_name(+)
           AND d.tablespace_name = t.tablespace_name(+)
           AND d.extent_management = 'LOCAL'
           AND d.contents = 'TEMPORARY')
 WHERE USED_RATIO >= :USED_RATIO
 ORDER BY USED_RATIO DESC
2018-08-09 19:24:57,298 [Thread-901:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {'USED_RATIO': '1'}
2018-08-09 19:25:26,917 [Thread-903:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:25:26,917 [Thread-903:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:25:26,983 [Thread-903:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:25:26,984 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:25:26,984 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:25:26,986 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:25:26,987 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:25:26,987 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:25:26,988 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:25:26,988 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:25:26,989 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:25:26,999 [Thread-903:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:25:27,400 [Thread-904:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:25:27,401 [Thread-904:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:25:27,458 [Thread-904:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:25:27,459 [Thread-904:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:25:27,459 [Thread-904:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:26:17,064 [Thread-905:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:26:17,065 [Thread-905:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:26:17,130 [Thread-905:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:26:17,130 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:26:17,131 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:26:17,136 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:26:17,137 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:26:17,138 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:26:17,140 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:26:17,140 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:26:17,140 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:26:17,142 [Thread-905:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:26:17,546 [Thread-906:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:26:17,546 [Thread-906:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:26:17,612 [Thread-906:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:26:17,612 [Thread-906:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:26:17,612 [Thread-906:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:18,861 [Thread-907:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:27:18,862 [Thread-907:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:27:18,916 [Thread-907:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:27:18,917 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:27:18,917 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:18,920 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:27:18,921 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:27:18,921 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:18,923 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:27:18,924 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:27:18,924 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:18,925 [Thread-907:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:27:19,271 [Thread-908:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:27:19,272 [Thread-908:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:27:19,366 [Thread-908:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:27:19,366 [Thread-908:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:27:19,366 [Thread-908:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:48,761 [Thread-909:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:27:48,762 [Thread-909:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:27:48,826 [Thread-909:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:27:48,826 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:27:48,827 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:48,829 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:27:48,830 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:27:48,830 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:48,832 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:27:48,832 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:27:48,832 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:27:48,833 [Thread-909:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:27:49,161 [Thread-910:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:27:49,162 [Thread-910:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:27:49,220 [Thread-910:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:27:49,220 [Thread-910:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:27:49,220 [Thread-910:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:31:58,414 [Thread-911:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:31:58,414 [Thread-911:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:31:58,488 [Thread-911:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:31:58,488 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:31:58,488 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:31:58,491 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:31:58,492 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:31:58,492 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:31:58,493 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:31:58,494 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:31:58,494 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:31:58,495 [Thread-911:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:31:58,879 [Thread-912:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:31:58,879 [Thread-912:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:31:58,943 [Thread-912:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:31:58,943 [Thread-912:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:31:58,944 [Thread-912:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:33:27,676 [Thread-913:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:33:27,677 [Thread-913:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:33:27,742 [Thread-913:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:33:27,742 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:33:27,742 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:33:27,745 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:33:27,746 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:33:27,746 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:33:27,747 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:33:27,747 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:33:27,747 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:33:27,750 [Thread-913:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:33:28,102 [Thread-914:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:33:28,102 [Thread-914:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:33:28,159 [Thread-914:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:33:28,159 [Thread-914:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:33:28,160 [Thread-914:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:20,629 [Thread-915:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:35:20,630 [Thread-915:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:35:20,708 [Thread-915:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:35:20,708 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:35:20,708 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:20,711 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:35:20,711 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:35:20,711 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:20,713 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:35:20,713 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:35:20,713 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:20,715 [Thread-915:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:35:21,107 [Thread-916:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:35:21,108 [Thread-916:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:35:21,184 [Thread-916:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:35:21,185 [Thread-916:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:35:21,185 [Thread-916:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:43,919 [Thread-917:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:35:43,919 [Thread-917:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:35:43,985 [Thread-917:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:35:43,985 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:35:43,985 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:43,987 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:35:43,988 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:35:43,988 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:43,989 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:35:43,989 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:35:43,990 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:35:43,990 [Thread-917:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:35:44,328 [Thread-918:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:35:44,330 [Thread-918:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:35:44,419 [Thread-918:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:35:44,419 [Thread-918:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:35:44,419 [Thread-918:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:36:35,492 [Thread-919:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:36:35,493 [Thread-919:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:36:35,558 [Thread-919:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:36:35,558 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:36:35,558 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:36:35,560 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:36:35,561 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:36:35,562 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:36:35,563 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:36:35,564 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:36:35,564 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:36:35,565 [Thread-919:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:36:35,940 [Thread-920:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:36:35,940 [Thread-920:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:36:36,030 [Thread-920:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:36:36,030 [Thread-920:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:36:36,030 [Thread-920:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:37:06,411 [Thread-921:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:37:06,412 [Thread-921:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:37:06,487 [Thread-921:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:37:06,487 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:37:06,488 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:37:06,492 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:37:06,493 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:37:06,493 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:37:06,495 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:37:06,496 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:37:06,496 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:37:06,497 [Thread-921:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:37:06,927 [Thread-922:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:37:06,928 [Thread-922:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:37:07,001 [Thread-922:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:37:07,002 [Thread-922:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:37:07,002 [Thread-922:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:21,118 [Thread-923:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:21,119 [Thread-923:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:38:21,189 [Thread-923:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:38:21,189 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:38:21,189 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:21,192 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:38:21,192 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:38:21,193 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:21,194 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:38:21,194 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:38:21,194 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:21,195 [Thread-923:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:38:21,549 [Thread-924:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:21,549 [Thread-924:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:38:21,612 [Thread-924:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:38:21,613 [Thread-924:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:38:21,613 [Thread-924:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:34,089 [Thread-925:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:34,089 [Thread-925:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:38:34,157 [Thread-925:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:38:34,157 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:38:34,157 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:34,160 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:38:34,161 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:38:34,161 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:34,162 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:38:34,163 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:38:34,163 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:34,164 [Thread-925:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:38:34,507 [Thread-926:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:34,507 [Thread-926:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:38:34,572 [Thread-926:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:38:34,572 [Thread-926:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:38:34,572 [Thread-926:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:39,407 [Thread-927:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:39,408 [Thread-927:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:38:39,523 [Thread-927:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:38:39,523 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:38:39,523 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:39,526 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:38:39,527 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:38:39,527 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:39,528 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:38:39,528 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:38:39,528 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:38:39,529 [Thread-927:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:38:39,829 [Thread-928:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:38:39,830 [Thread-928:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:38:39,906 [Thread-928:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:38:39,906 [Thread-928:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:38:39,906 [Thread-928:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:39:55,184 [Thread-929:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:39:55,184 [Thread-929:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:39:55,252 [Thread-929:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:39:55,253 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:39:55,253 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:39:55,255 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:39:55,256 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:39:55,257 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:39:55,260 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:39:55,260 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:39:55,261 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:39:55,262 [Thread-929:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:39:55,621 [Thread-930:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:39:55,621 [Thread-930:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:39:55,678 [Thread-930:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:39:55,679 [Thread-930:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:39:55,679 [Thread-930:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:17,289 [Thread-931:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:40:17,289 [Thread-931:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:40:17,355 [Thread-931:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:40:17,355 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:40:17,355 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:17,357 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:40:17,358 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:40:17,358 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:17,360 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:40:17,360 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:40:17,360 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:17,361 [Thread-931:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:40:17,706 [Thread-932:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:40:17,706 [Thread-932:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:40:17,773 [Thread-932:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:40:17,773 [Thread-932:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:40:17,774 [Thread-932:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:28,424 [Thread-933:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:40:28,424 [Thread-933:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:40:28,490 [Thread-933:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:40:28,490 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:40:28,490 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:28,492 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:40:28,493 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:40:28,493 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:28,494 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:40:28,494 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:40:28,494 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:40:28,495 [Thread-933:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:40:28,840 [Thread-934:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:40:28,841 [Thread-934:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:40:28,932 [Thread-934:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:40:28,932 [Thread-934:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:40:28,933 [Thread-934:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:41:50,522 [Thread-935:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:41:50,522 [Thread-935:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:41:50,586 [Thread-935:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:41:50,587 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:41:50,587 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:41:50,590 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:41:50,591 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:41:50,591 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:41:50,593 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:41:50,593 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:41:50,593 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:41:50,594 [Thread-935:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:41:50,987 [Thread-936:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:41:50,988 [Thread-936:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:41:51,062 [Thread-936:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:41:51,062 [Thread-936:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:41:51,062 [Thread-936:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:29,256 [Thread-937:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:43:29,256 [Thread-937:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:43:29,318 [Thread-937:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:43:29,318 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:43:29,319 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:29,321 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:43:29,322 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:43:29,322 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:29,323 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:43:29,323 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:43:29,323 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:29,324 [Thread-937:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:43:29,654 [Thread-938:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:43:29,654 [Thread-938:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:43:29,717 [Thread-938:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:43:29,718 [Thread-938:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:43:29,718 [Thread-938:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:44,232 [Thread-939:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:43:44,233 [Thread-939:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:43:44,354 [Thread-939:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:43:44,355 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:43:44,355 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:44,359 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:43:44,360 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:43:44,360 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:44,361 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:43:44,362 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:43:44,362 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:43:44,363 [Thread-939:140288073885440] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:43:44,820 [Thread-940:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:43:44,820 [Thread-940:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:43:44,901 [Thread-940:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:43:44,902 [Thread-940:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:43:44,902 [Thread-940:140288105633536] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:44:47,727 [Thread-941:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:44:47,728 [Thread-941:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'menuQry'}
2018-08-09 19:44:47,794 [Thread-941:140288105633536] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT MENU_NAME,\n       MENU_URL,\n       MENU_URL_FUNC,\n       RESPONSE_URL,\n       MENU_ORDER,\n       HAS_LEAF,\n       IS_LEAF,\n       LEAF_MENU_ID,\n       LEAF_ORDER\n  FROM DBMP_SYS_MENU_URL\n ORDER BY MENU_ORDER, LEAF_ORDER', 'resultBindList': {}}
2018-08-09 19:44:47,794 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT MENU_NAME,
       MENU_URL,
       MENU_URL_FUNC,
       RESPONSE_URL,
       MENU_ORDER,
       HAS_LEAF,
       IS_LEAF,
       LEAF_MENU_ID,
       LEAF_ORDER
  FROM DBMP_SYS_MENU_URL
 ORDER BY MENU_ORDER, LEAF_ORDER
2018-08-09 19:44:47,794 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:44:47,797 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'MENU_NAME': '数据库仪表盘', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 100, 'HAS_LEAF': 0, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 200, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间使用率', 'MENU_URL': 'tableSpaceQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 201, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 1}, {'MENU_NAME': '日志文件', 'MENU_URL': 'redoQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 202, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': 'controlQuery', 'MENU_URL_FUNC': 'commMenuInitQry', 'RESPONSE_URL': 'commMenuInit.html', 'MENU_ORDER': 203, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2, 'LEAF_ORDER': 99}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '汇总信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 2}, {'MENU_NAME': '实例信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 3}, {'MENU_NAME': '参数信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 4}, {'MENU_NAME': '字符集', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 5}, {'MENU_NAME': '用户信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 1006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 1000, 'LEAF_ORDER': 99}, {'MENU_NAME': '性能中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '数据库活动会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库性能度量', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'IO性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 3}, {'MENU_NAME': '实例内存性能', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 4}, {'MENU_NAME': '数据库等待事件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'SQL性能分析', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 2006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 2000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容量中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '表空间信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 2}, {'MENU_NAME': '控制文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 3}, {'MENU_NAME': '日志文件', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 4}, {'MENU_NAME': '归档日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'ASM DISK', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'ASM DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 7}, {'MENU_NAME': '数据段信息', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 8}, {'MENU_NAME': '存储拓扑', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 3009, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 3000, 'LEAF_ORDER': 99}, {'MENU_NAME': '应用中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '会话', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 1}, {'MENU_NAME': '进程', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 2}, {'MENU_NAME': '事物', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 3}, {'MENU_NAME': '锁', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'UNDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 5}, {'MENU_NAME': 'TEMP', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4006, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 6}, {'MENU_NAME': 'REDO', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4007, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 7}, {'MENU_NAME': '对象', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 4008, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 4000, 'LEAF_ORDER': 99}, {'MENU_NAME': '集群中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '心跳配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 1}, {'MENU_NAME': '集群配置', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'GC监控', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 5003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 5000, 'LEAF_ORDER': 99}, {'MENU_NAME': '容灾中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '备份', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 1}, {'MENU_NAME': '坏块', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 2}, {'MENU_NAME': '闪回', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 3}, {'MENU_NAME': 'DG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 4}, {'MENU_NAME': 'OGG', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 6005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 6000, 'LEAF_ORDER': 99}, {'MENU_NAME': '日志中心', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '告警汇总', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 1}, {'MENU_NAME': '数据库日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 2}, {'MENU_NAME': 'ASM日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 3}, {'MENU_NAME': '集群日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 4}, {'MENU_NAME': '操作系统日志', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 7005, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 7000, 'LEAF_ORDER': 99}, {'MENU_NAME': '自动化运维', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8000, 'HAS_LEAF': 1, 'IS_LEAF': 0, 'LEAF_MENU_ID': None, 'LEAF_ORDER': None}, {'MENU_NAME': '巡检报告', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8001, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 1}, {'MENU_NAME': '表空间扩容脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8002, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 2}, {'MENU_NAME': '锁KILL脚本', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8003, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 3}, {'MENU_NAME': '自动AWR/ASH/ADDM', 'MENU_URL': '#', 'MENU_URL_FUNC': None, 'RESPONSE_URL': None, 'MENU_ORDER': 8004, 'HAS_LEAF': 0, 'IS_LEAF': 1, 'LEAF_MENU_ID': 8000, 'LEAF_ORDER': 99}]
2018-08-09 19:44:47,798 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT APP_ID, APP_CODE, APP_URL, APP_NAME FROM DBMP_APP_CONFIG ORDER BY APP_DISP_ORDER
2018-08-09 19:44:47,798 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:44:47,799 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'APP_ID': 106, 'APP_CODE': 'dbSkyEye', 'APP_URL': 'dbSkyEye', 'APP_NAME': '数据库监控平台'}, {'APP_ID': 104, 'APP_CODE': 'dbReport', 'APP_URL': 'dbReport', 'APP_NAME': '数据库巡检平台'}, {'APP_ID': 107, 'APP_CODE': 'dbSQLAudit', 'APP_URL': 'dbSQLAudit', 'APP_NAME': '数据库性能审计平台'}, {'APP_ID': 103, 'APP_CODE': 'dbILM', 'APP_URL': 'dbILM', 'APP_NAME': '数据库生命周期管理'}, {'APP_ID': 105, 'APP_CODE': 'dbRobot', 'APP_URL': 'dbRobot', 'APP_NAME': '数据库自动运维平台'}, {'APP_ID': 102, 'APP_CODE': 'dbGuardian', 'APP_URL': 'dbGuardian', 'APP_NAME': '数据库守护平台'}, {'APP_ID': 101, 'APP_CODE': 'cfgManage', 'APP_URL': 'cfgManage', 'APP_NAME': '配置管理'}, {'APP_ID': 100, 'APP_CODE': 'authManage', 'APP_URL': 'authManage', 'APP_NAME': '授权管理'}]
2018-08-09 19:44:47,799 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询语句 SQLStr => SELECT DB_ID, DB_NAME FROM DBMP_DB_INFO
2018-08-09 19:44:47,800 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询绑定变量 bindList => {}
2018-08-09 19:44:47,801 [Thread-941:140288105633536] [DALUtil:getSQLResult] [DEBUG]- 查询返回结果 resultList => [{'DB_ID': 4245605106, 'DB_NAME': 'SQLAUDIT'}]
2018-08-09 19:44:48,183 [Thread-942:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询语句 SQLStr => 
SELECT URL_EXTEND_SQL, SQL_PARAM1, SQL_VALUE1, SQL_PARAM2, SQL_VALUE2, SQL_PARAM3, SQL_VALUE3
  FROM DBMP_MENU_URL_SQL_MAP
 WHERE MENU_URL = :MENU_URL
2018-08-09 19:44:48,183 [Thread-942:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询绑定变量 bindList => {'MENU_URL': 'instanceQry'}
2018-08-09 19:44:48,276 [Thread-942:140288073885440] [DALUtil:getCfgSQLAndBind] [DEBUG]- 查询返回结果 returnDict => {'resultSQL': 'SELECT ROWNUM "实例ID",\n       INSTANCE_NAME "实例名称",\n       HOST_NAME "主机名称",\n       VERSION "数据库版本",\n       TO_CHAR(STARTUP_TIME + ROWNUM, \'YYYY-MM-DD HH24:MI:SS\') "启动时间",\n       STATUS "实例状态",\n       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"\n  FROM DBMP_GV_INSTANCE', 'resultBindList': {}}
2018-08-09 19:44:48,277 [Thread-942:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询语句 SQLStr => SELECT ROWNUM "实例ID",
       INSTANCE_NAME "实例名称",
       HOST_NAME "主机名称",
       VERSION "数据库版本",
       TO_CHAR(STARTUP_TIME + ROWNUM, 'YYYY-MM-DD HH24:MI:SS') "启动时间",
       STATUS "实例状态",
       ROUND((SYSDATE - STARTUP_TIME), 1) "启动时长"
  FROM DBMP_GV_INSTANCE
2018-08-09 19:44:48,277 [Thread-942:140288073885440] [DALUtil:getSQLResultWithColName] [DEBUG]- 查询绑定变量 bindList => {}
